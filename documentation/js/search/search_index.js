var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/injectables/DynamicComponentService.html",[0,1.361,1,1.212]],["body/injectables/DynamicComponentService.html",[0,2.178,1,1.561,2,0.422,3,0.422,4,0.305,5,0.573,6,0.573,7,3.492,8,2.184,9,1.261,10,1.11,11,3.036,12,2.584,13,3.722,14,1.483,15,3.771,16,0.63,17,1.11,18,5.158,19,4.623,20,1.393,21,3.722,22,4.623,23,1.123,24,2.678,25,1.369,26,3.722,27,1.275,28,0.045,29,1.275,30,1.135,31,3.722,32,3.582,33,2.678,34,1.883,35,3.036,36,3.722,37,3.722,38,3.722,39,2.584,40,3.036,41,3.036,42,4.102,43,3.722,44,3.036,45,2.247,46,1.978,47,3.722,48,3.722,49,0.959,50,2.678,51,4.208,52,3.722,53,2.678,54,4.623,55,2.678,56,1.753,57,3.036,58,4.277,59,0.17,60,0.556,61,0.556,62,0.305,63,2.678,64,2.678,65,3.722,66,1.978,67,2.678,68,2.678,69,4.277,70,0.798,71,2.678,72,2.678,73,3.722,74,1.423,75,1.617,76,2.678,77,2.678,78,2.678,79,2.678,80,0.028,81,0.028]],["title/modules/NguiCommonModule.html",[82,0.68,83,1.535]],["body/modules/NguiCommonModule.html",[2,0.554,3,0.554,4,0.4,5,0.4,6,0.4,10,1.048,28,0.044,59,0.139,60,1.127,61,0.729,62,0.587,70,1.46,80,0.034,81,0.034,82,1.049,83,3.068,84,1.174,85,1.315,86,1.655,87,1.655,88,2.866,89,2.866,90,2.866,91,2.411,92,2.708,93,2.708,94,2.369,95,1.867,96,1.174,97,3.514,98,2.369,99,2.44,100,2.866,101,2.866,102,3.514,103,2.866,104,3.514]],["title/pipes/NguiHighlightPipe.html",[105,1.535,106,1.535]],["body/pipes/NguiHighlightPipe.html",[2,0.589,3,0.589,4,0.425,5,0.528,6,0.528,20,1.398,25,0.991,27,1.113,28,0.045,29,1.501,30,0.991,34,1.734,49,0.775,59,0.148,60,0.775,61,0.775,62,0.425,66,1.984,80,0.035,81,0.04,105,2.676,106,2.461,107,3.778,108,3.045,109,1.566,110,4.632,111,3.733,112,4.632,113,3.412,114,5.265,115,3.733,116,4.632,117,4.632,118,1.759,119,5.036,120,3.733,121,1.566,122,3.733,123,3.733,124,3.733]],["title/components/NguiInviewComponent.html",[14,0.766,125,1.212]],["body/components/NguiInviewComponent.html",[0,0.781,2,0.261,3,0.261,4,0.189,5,0.59,6,0.59,9,0.781,10,0.777,14,1.247,16,0.39,17,0.777,20,0.976,23,1.093,25,1.386,27,0.961,28,0.045,29,1.257,30,1.212,34,1.487,35,2.126,44,2.126,45,1.945,46,1.385,49,0.915,56,1.871,59,0.066,60,0.541,61,0.344,62,0.189,70,1.362,74,1.385,75,1.574,80,0.02,81,0.02,84,0.871,85,0.62,109,0.695,118,1.228,121,1.351,125,1.532,126,1.151,127,1.151,128,3.594,129,1.352,130,2.018,131,1.81,132,2.546,133,2.607,134,1.941,135,2.148,136,4.411,137,1.608,138,1.385,139,1.945,140,2.237,141,2.214,142,1.945,143,2.237,144,2.237,145,2.928,146,3.652,147,2.979,148,3.652,149,2.607,150,2.126,151,2.536,152,2.205,153,2.24,154,2.628,155,2.928,156,2.398,157,0.881,158,1.721,159,2.628,160,2.607,161,2.607,162,2.126,163,2.979,164,2.607,165,3.652,166,2.607,167,3.652,168,4.216,169,3.652,170,2.979,171,1.71,172,1.532,173,1.945,174,1.657,175,2.838,176,2.126,177,2.126,178,1.385,179,1.81,180,1.81,181,1.81,182,2.126,183,2.126,184,1.657,185,2.628,186,1.81,187,2.628,188,1.657,189,2.663,190,1.657,191,1.657,192,2.607,193,1.657,194,2.126,195,2.607,196,1.81,197,2.607,198,2.126,199,2.126,200,1.657,201,3.652,202,1.986,203,1.657,204,2.126,205,1.657,206,1.385,207,2.205,208,1.657,209,2.536,210,1.657,211,2.607,212,2.536,213,1.151,214,1.81,215,1.657,216,1.151,217,1.352,218,1.352,219,0.781,220,1.151,221,1.574,222,1.352,223,2.126,224,2.126,225,1.352,226,1.352,227,1.352,228,1.352,229,1.352,230,1.352,231,1.352,232,1.352,233,1.657,234,1.657,235,1.657,236,1.657,237,1.657,238,1.657,239,1.657,240,1.657,241,1.385,242,0.613,243,2.536,244,1.151,245,0.695,246,1.151,247,1.151,248,0.695,249,1.151,250,0.62,251,0.695,252,0.976,253,0.62,254,1.001,255,1.151,256,0.554,257,1.151,258,0.62,259,1.001,260,1.151]],["title/directives/NguiInviewDirective.html",[242,0.68,253,1.081]],["body/directives/NguiInviewDirective.html",[0,1.039,2,0.348,3,0.348,4,0.251,5,0.599,6,0.599,9,1.039,16,0.519,17,0.966,20,1.213,23,1.359,25,1.376,27,0.966,28,0.045,29,0.966,30,1.293,34,1.438,49,1.011,56,1.809,59,0.088,60,0.672,61,0.458,62,0.251,74,1.722,75,1.956,80,0.025,81,0.025,84,1.083,96,1.083,109,0.925,118,1.527,121,1.611,128,3.65,130,2.205,132,3.13,134,2.755,137,1.777,139,2.319,140,2.667,141,1.527,147,3.452,150,2.643,151,2.939,152,2.555,153,2.396,155,3.273,156,2.722,157,1.172,158,2.221,159,3.133,171,0.826,172,0.925,175,3.079,176,2.643,177,2.643,178,1.722,179,2.25,180,2.25,181,2.25,182,2.643,183,2.643,185,3.133,186,2.25,187,3.133,189,2.941,198,1.8,199,2.643,202,2.221,204,2.643,206,1.722,217,1.8,218,1.8,219,1.039,221,1.332,222,1.8,223,2.643,224,2.643,225,2.643,226,2.643,227,1.8,228,1.8,229,1.8,230,1.8,231,1.8,232,1.8,242,0.904,253,1.213,254,3.079,261,1.8,262,4.16,263,2.667,264,3.24,265,2.206,266,2.206,267,2.206,268,2.206,269,2.206,270,2.206,271,2.206,272,2.206,273,1.332,274,1.332,275,2.206,276,2.206]],["title/modules/NguiInviewModule.html",[82,0.68,91,1.212]],["body/modules/NguiInviewModule.html",[2,0.57,3,0.57,4,0.411,5,0.411,6,0.411,10,1.077,28,0.044,59,0.143,60,1.113,61,0.749,62,0.611,80,0.034,81,0.034,82,1.067,84,1.207,85,1.352,86,2.337,87,1.702,91,2.394,94,2.411,95,1.919,96,1.207,98,2.411,99,2.508,125,2.43,219,1.702,253,2.169,277,2.946,278,2.946,279,2.946,280,3.612,281,3.151,282,3.151,283,3.612,284,3.612]],["title/components/NguiInviewPageComponent.html",[14,0.766,248,1.212]],["body/components/NguiInviewPageComponent.html",[2,0.249,3,0.249,4,0.18,5,0.577,6,0.577,9,0.743,14,1.227,16,0.371,17,0.747,20,0.938,23,1.051,25,1.326,27,0.747,28,0.045,29,1.156,30,1.191,34,1.451,39,1.74,41,1.286,45,1.883,46,1.657,49,0.932,56,1.18,59,0.063,60,0.327,61,0.327,62,0.18,66,0.838,70,1.339,80,0.019,81,0.019,85,0.59,96,1.501,109,0.661,118,1.18,125,0.661,126,1.095,127,1.095,130,2.17,131,1.74,132,2.711,135,2.223,137,0.838,138,1.331,139,1.883,140,2.165,141,2.179,142,1.883,143,2.165,144,2.691,145,3.212,151,2.467,152,2.145,153,1.888,157,0.838,158,1.674,171,0.938,172,1.051,173,1.513,175,1.513,196,1.74,202,2.233,207,1.883,209,1.74,212,2.691,213,1.095,214,1.74,216,1.095,220,1.095,221,1.883,241,1.331,242,0.59,243,2.467,244,1.095,245,0.661,246,1.095,247,1.095,248,1.49,249,1.095,250,0.59,251,0.661,252,1.33,253,0.59,254,0.952,255,1.095,256,0.527,257,1.095,258,0.59,259,3.274,260,1.095,285,2.69,286,1.286,287,4.127,288,3.529,289,3.529,290,2.898,291,2.506,292,2.898,293,2.044,294,2.044,295,2.044,296,2.467,297,3.118,298,3.118,299,3.366,300,2.866,301,2.506,302,3.552,303,3.552,304,3.552,305,3.552,306,3.552,307,2.506,308,2.793,309,2.467,310,3.118,311,2.898,312,2.506,313,2.711,314,1.577,315,1.577,316,1.577,317,1.577,318,1.577,319,2.506,320,1.577,321,2.544,322,1.577,323,2.044,324,4.127,325,2.506,326,2.044,327,2.506,328,2.165,329,1.577,330,2.044,331,1.577,332,1.577,333,1.577,334,2.506,335,1.577,336,3.552,337,3.552,338,1.577,339,2.506,340,3.118,341,2.506,342,3.118,343,2.506,344,1.577,345,1.577,346,1.577,347,1.74,348,3.118,349,1.577,350,1.577,351,1.577,352,1.577]],["title/directives/NguiListDirective.html",[242,0.68,256,0.965]],["body/directives/NguiListDirective.html",[2,0.53,3,0.53,4,0.383,5,0.598,6,0.598,16,0.791,17,1.292,23,1.41,25,1.345,27,1.002,28,0.045,29,1.002,30,0.892,49,1.052,59,0.133,60,0.698,61,0.698,62,0.383,70,1.292,80,0.033,81,0.033,109,1.41,121,1.818,130,2.2,134,2.693,137,1.449,141,2.042,156,3.167,157,1.786,158,2.53,189,3.299,242,1.129,252,1.623,256,1.449,263,3.01,273,2.03,274,2.03,285,2.787,353,2.742,354,3.331,355,3.167,356,4.334,357,3.01,358,3.01,359,3.536,360,3.536,361,3.362,362,3.362,363,3.362]],["title/directives/NguiListItemDirective.html",[242,0.68,258,1.081]],["body/directives/NguiListItemDirective.html",[2,0.3,3,0.3,4,0.217,5,0.587,6,0.587,16,0.448,17,0.865,20,1.086,23,1.217,25,1.348,27,0.567,28,0.045,29,0.567,30,1.123,32,2.73,34,0.712,49,0.878,59,0.076,60,0.926,61,0.395,62,0.217,66,2.465,70,1.426,80,0.022,81,0.027,109,0.798,118,1.367,137,1.671,139,2.123,141,1.367,142,2.374,152,2.374,153,1.868,157,1.011,158,1.853,163,3.208,171,1.086,173,1.149,178,1.868,202,2.185,207,1.149,221,2.693,242,0.827,245,1.946,250,1.737,251,1.217,252,2.034,256,1.55,258,1.086,259,2.693,273,1.752,274,1.752,285,2.738,300,1.322,308,2.123,309,2.73,313,1.149,321,3.639,354,1.322,355,1.149,357,1.322,364,1.553,365,3.932,366,3.932,367,3.932,368,3.516,369,3.932,370,3.516,371,3.516,372,2.901,373,3.516,374,3.516,375,3.516,376,3.516,377,2.901,378,2.367,379,1.903,380,3.453,381,1.903,382,1.903,383,1.903,384,2.901,385,1.903,386,2.901,387,1.903,388,1.903,389,1.903,390,1.903,391,1.553,392,1.553,393,1.553,394,1.752,395,1.553,396,1.752,397,1.553,398,2.901,399,1.903,400,1.903,401,1.553,402,1.903,403,1.553,404,2.901,405,1.903,406,1.903,407,1.903,408,1.903,409,1.903,410,1.903,411,1.553,412,2.901,413,2.901,414,1.903,415,1.903,416,1.903,417,2.367,418,2.901,419,2.367,420,2.367,421,2.901,422,2.367,423,1.903,424,1.903,425,1.903,426,2.901,427,1.903,428,1.903,429,1.903,430,1.903,431,1.903,432,1.903,433,1.903,434,1.903,435,1.903,436,2.901,437,1.903,438,1.903,439,1.903,440,2.901,441,4.46,442,1.903,443,1.903,444,3.932,445,1.903,446,4.46,447,1.903,448,1.553,449,1.903,450,1.903,451,1.903,452,1.903,453,1.903,454,1.903,455,2.901,456,1.903,457,1.903,458,1.903,459,1.903,460,1.903,461,2.901,462,2.901,463,1.903]],["title/modules/NguiListModule.html",[82,0.68,92,1.361]],["body/modules/NguiListModule.html",[2,0.476,3,0.476,4,0.344,5,0.344,6,0.344,10,0.899,28,0.044,59,0.12,60,1.148,61,0.626,62,0.577,70,0.899,80,0.031,81,0.031,82,0.95,84,1.008,85,1.129,86,2.143,87,1.421,91,2.186,92,2.74,94,2.145,95,1.602,96,1.008,98,2.145,99,2.094,100,2.46,101,2.46,135,1.265,219,1.421,245,2.372,248,2.396,250,2.117,251,1.265,252,1.129,256,1.89,258,2.117,281,2.803,282,3.516,391,2.46,392,2.46,393,2.46,464,2.46,465,2.46,466,3.016,467,2.46,468,3.016,469,4.036,470,3.016,471,2.46]],["title/modules/NguiUtilsModule.html",[82,0.68,93,1.361]],["body/modules/NguiUtilsModule.html",[1,2.32,2,0.559,3,0.559,4,0.404,5,0.404,6,0.404,10,1.467,28,0.045,59,0.141,60,1.148,61,0.736,62,0.607,80,0.034,81,0.034,82,1.055,84,1.185,85,1.327,86,2.317,87,1.671,93,2.661,94,2.383,95,1.884,96,1.185,98,2.383,103,2.892,106,3.071,137,1.185,219,1.671,281,3.114,282,2.462,472,2.892,473,2.892,474,2.892,475,2.892,476,3.546,477,3.546,478,3.546,479,2.892,480,2.708,481,3.546,482,2.708,483,3.546]],["title/components/NguiVirtualListComponent.html",[14,0.766,250,1.081]],["body/components/NguiVirtualListComponent.html",[1,1.964,2,0.207,3,0.207,4,0.15,5,0.578,6,0.578,7,0.913,9,0.62,10,0.645,14,0.937,16,0.309,17,0.645,20,0.81,23,0.908,25,1.358,27,0.645,28,0.045,29,1.053,30,0.574,32,2.637,34,1.032,39,1.502,42,3.888,45,1.664,46,0.699,49,1.005,51,2.606,57,1.765,59,0.052,60,0.572,61,0.273,62,0.15,70,1.333,80,0.016,81,0.016,85,0.492,96,1.269,109,0.552,118,1.019,121,1.156,125,0.552,126,0.913,127,0.913,130,1.759,131,1.502,132,2.292,134,2.308,135,1.34,137,1.564,138,1.697,141,2.046,142,1.664,143,1.914,144,1.914,145,3.309,153,1.15,156,2.531,158,1.789,170,1.765,171,0.81,172,0.908,173,0.794,189,2.7,194,1.765,196,2.787,202,1.789,207,1.664,209,1.502,212,2.218,213,1.502,214,1.502,216,0.913,220,1.502,241,1.15,242,0.509,243,2.218,244,0.913,245,0.552,246,0.913,247,0.913,248,1.684,249,0.913,250,1.196,251,2.234,252,1.674,253,0.492,254,1.664,255,0.913,256,0.44,257,0.913,258,0.492,259,2.292,260,0.913,262,1.765,263,3.25,285,2.696,288,1.765,289,3.097,290,2.606,292,1.765,293,2.606,294,2.606,295,2.606,296,3.309,300,0.913,308,2.132,309,2.637,311,3.097,313,2.531,323,1.765,328,1.914,347,2.452,354,1.914,355,2.132,357,1.502,358,1.502,359,1.765,360,1.765,419,1.765,420,2.606,471,1.073,479,1.073,484,1.073,485,2.164,486,2.164,487,2.164,488,2.164,489,2.164,490,3.797,491,2.164,492,3.194,493,3.194,494,2.164,495,4.584,496,2.756,497,3.194,498,3.797,499,4.193,500,3.194,501,3.194,502,3.194,503,2.164,504,3.194,505,3.797,506,1.315,507,2.164,508,2.164,509,3.194,510,2.164,511,1.315,512,1.315,513,1.315,514,1.315,515,1.15,516,2.164,517,1.765,518,2.164,519,1.315,520,1.315,521,2.164,522,2.164,523,1.315,524,1.315,525,1.315,526,1.315,527,1.315,528,2.164,529,2.756,530,1.315,531,2.164,532,2.164,533,2.164,534,1.315,535,2.164,536,3.194,537,1.315,538,1.315,539,1.315,540,2.164,541,1.315,542,1.073,543,2.756,544,1.315,545,1.315,546,1.315,547,1.315,548,1.315,549,1.315,550,1.315,551,1.315,552,1.315,553,1.315,554,1.073,555,1.315,556,1.315]],["title/classes/NoMatchFound.html",[59,0.115,396,1.744]],["body/classes/NoMatchFound.html",[2,0.65,3,0.65,4,0.469,5,0.56,6,0.56,16,0.969,17,1.466,25,1.093,28,0.043,49,0.855,59,0.195,62,0.469,80,0.037,81,0.043,113,2.969,171,1.542,172,1.728,241,2.894,396,2.969,397,4.012,557,4.012,558,3.361,559,4.12]],["title/classes/NoneSelect.html",[59,0.115,394,1.744]],["body/classes/NoneSelect.html",[2,0.657,3,0.657,4,0.474,5,0.564,6,0.564,16,0.98,17,1.476,25,1.105,28,0.043,49,0.864,59,0.196,62,0.474,80,0.038,81,0.038,113,2.988,171,1.559,172,1.747,241,2.904,355,2.988,394,2.988,560,4.037,561,3.397,562,4.164]],["title/changelog.html",[206,1.287,563,1.682,564,2.423]],["body/changelog.html",[12,2.947,14,1.126,28,0.038,30,1.328,70,1.492,74,2.255,80,0.038,81,0.038,121,1.78,135,2.1,154,3.462,155,2.947,186,2.947,565,4.243,566,4.083,567,4.243,568,4.243,569,3.462,570,3.462,571,4.243,572,4.243,573,4.243,574,4.243,575,4.243,576,4.243,577,4.243,578,4.243,579,3.462]],["title/coverage.html",[580,2.722]],["body/coverage.html",[0,1.57,1,1.398,4,0.38,5,0.653,6,0.653,7,2.314,8,2.719,14,1.34,28,0.044,49,0.692,59,0.19,80,0.033,81,0.036,105,1.771,106,1.771,107,2.719,108,2.719,121,1.398,125,1.398,128,2.993,129,2.719,135,1.398,242,1.124,245,1.398,248,1.398,250,1.248,251,1.398,252,1.248,253,1.248,256,1.114,258,1.248,261,2.719,285,2.78,286,2.719,353,2.719,364,2.719,394,2.012,396,2.012,403,4.121,448,2.719,480,2.012,482,2.012,484,2.719,515,1.771,557,2.719,558,2.719,560,2.719,561,2.719,580,2.314,581,2.719,582,3.333,583,3.333,584,3.333,585,3.333,586,3.333,587,3.333,588,3.333,589,3.333,590,3.333,591,3.333,592,3.333,593,3.333,594,3.333,595,3.333,596,3.333,597,4.31,598,3.333,599,3.333,600,2.719,601,2.719,602,4.31,603,3.333,604,2.719,605,3.333,606,3.333,607,3.333,608,3.333]],["title/dependencies.html",[84,1.159,609,2.423]],["body/dependencies.html",[15,3.352,28,0.045,61,0.853,80,0.037,81,0.037,84,1.373,219,1.936,610,4.109,611,5.788,612,4.109,613,4.109,614,4.109,615,4.91,616,3.409,617,4.109,618,4.109,619,4.109,620,4.109,621,4.109,622,4.109,623,4.109,624,4.109]],["title/miscellaneous/functions.html",[515,1.843,625,1.976]],["body/miscellaneous/functions.html",[5,0.476,6,0.476,16,0.982,27,1.245,28,0.042,29,1.245,30,1.451,49,1.097,80,0.038,81,0.038,130,1.751,134,2.218,137,1.395,138,2.218,358,2.899,378,3.406,482,2.993,515,2.218,517,3.406,600,3.406,601,4.044,625,3.406,626,4.175,627,5.287,628,4.175,629,4.175,630,4.175]],["title/index.html",[16,0.57,206,1.287,563,1.682]],["body/index.html",[1,1.458,10,1.036,11,2.834,12,2.413,14,1.438,28,0.043,56,1.637,59,0.138,60,1.011,62,0.396,70,1.615,74,1.846,75,2.098,80,0.034,81,0.034,82,1.042,83,1.846,86,1.637,87,1.637,91,2.044,92,2.296,93,2.296,98,1.846,105,1.846,130,1.458,135,2.044,175,2.098,242,1.042,251,1.458,252,1.824,296,2.413,308,2.098,411,2.834,417,3.611,482,2.098,515,2.589,570,3.611,580,2.413,631,5.13,632,3.474,633,3.474,634,3.474,635,3.474,636,3.474,637,3.474,638,3.474,639,3.474,640,3.474,641,4.872,642,3.474,643,3.474,644,4.427,645,3.474,646,3.474,647,4.427,648,3.474,649,3.474,650,3.474,651,4.427,652,3.474,653,3.474,654,3.474,655,3.474,656,3.474,657,3.474,658,3.474,659,3.474,660,3.474,661,3.474,662,3.474]],["title/classes/konsole.html",[59,0.115,480,1.744]],["body/classes/konsole.html",[2,0.784,3,0.275,4,0.198,5,0.556,6,0.556,9,0.82,16,0.41,17,0.808,20,1.014,25,1.266,27,1.34,28,0.045,29,1.34,30,1.192,34,1.86,46,1.994,49,0.964,59,0.107,62,0.198,66,1.767,80,0.021,81,0.021,113,2.454,138,0.925,171,1.405,172,1.136,178,0.925,179,3.593,202,2.298,273,2.007,274,2.007,299,3.511,313,3.156,326,3.98,328,1.881,347,1.881,380,3.316,395,2.21,401,2.21,480,1.635,542,2.21,554,2.21,604,1.42,616,1.209,663,1.741,664,1.741,665,2.709,666,1.741,667,5.582,668,3.752,669,4.969,670,4.304,671,5.501,672,3.752,673,2.709,674,4.304,675,2.709,676,2.709,677,2.709,678,2.709,679,2.709,680,2.709,681,2.709,682,1.741,683,5.274,684,1.741,685,5.174,686,2.709,687,1.741,688,2.709,689,4.878,690,4.065,691,2.709,692,1.741,693,2.709,694,1.741,695,2.709,696,2.709,697,1.741,698,2.709,699,1.741,700,2.709,701,1.741,702,2.709,703,1.741,704,2.709,705,1.741,706,2.709,707,1.741,708,2.709,709,1.741,710,2.709,711,1.741,712,1.741,713,1.741,714,1.741,715,1.741,716,1.741,717,1.741,718,1.741,719,1.741,720,1.741,721,1.741,722,1.741,723,1.741,724,2.709,725,2.709,726,1.741,727,1.741,728,1.741,729,1.741,730,1.741,731,1.741,732,1.741,733,1.741,734,1.741,735,1.741,736,1.741,737,1.741,738,2.709,739,3.325,740,3.752,741,1.741,742,3.752,743,3.752,744,3.325,745,2.709,746,1.741,747,1.741,748,1.741]],["title/license.html",[206,1.287,563,1.682,749,1.976]],["body/license.html",[4,0.411,10,1.077,28,0.034,40,2.946,56,2.138,80,0.034,81,0.034,96,1.207,137,1.207,162,2.946,330,4.245,422,2.946,566,2.946,579,2.946,581,2.946,749,2.946,750,3.612,751,4.961,752,3.612,753,3.612,754,3.612,755,4.537,756,3.612,757,3.612,758,3.612,759,3.612,760,4.537,761,3.612,762,5.666,763,3.612,764,4.537,765,4.961,766,3.612,767,4.961,768,4.537,769,3.612,770,3.612,771,3.612,772,3.612,773,3.612,774,3.612,775,3.612,776,3.612,777,3.612,778,3.612,779,3.612,780,3.612,781,3.612,782,4.537,783,4.537,784,3.612,785,3.612,786,4.537,787,3.612,788,3.612,789,3.612,790,3.612,791,3.612,792,3.612,793,3.612,794,3.612,795,3.612,796,3.612,797,3.612,798,3.612,799,3.612,800,3.612,801,3.612,802,3.612,803,3.612,804,3.612]],["title/modules.html",[82,0.922]],["body/modules.html",[28,0.039,80,0.039,81,0.039,82,1.021,83,2.305,91,1.82,92,2.044,93,2.044,569,4.517,616,3.845,805,5.538,806,5.538]],["title/overview.html",[807,3.198]],["body/overview.html",[0,1.412,1,1.903,10,0.894,14,0.796,28,0.045,59,0.119,62,0.342,80,0.031,81,0.031,82,0.946,83,2.963,84,1.002,85,1.122,86,1.412,87,1.412,88,2.446,89,2.446,90,2.446,91,2.383,92,2.755,93,2.646,94,2.136,95,1.593,96,1.002,105,1.593,106,2.824,125,2.229,178,2.136,180,2.792,181,2.792,242,0.705,245,2.229,248,2.229,250,1.99,253,1.99,256,1.776,258,1.99,277,2.446,278,2.446,279,2.446,464,2.446,465,2.446,467,2.446,472,2.446,473,2.446,474,2.446,475,2.446,807,2.446]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":403,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["0.5.0",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["0.8.26",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":178,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{},"overview.html":{}}}],["1/1",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":73,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["10/10",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["10/18",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["11/15",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["12/43",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":179,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"classes/konsole.html":{}}}],["2.5.4",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":566,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["27",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":180,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"overview.html":{}}}],["37",{"_index":442,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["38",{"_index":443,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["39",{"_index":447,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["39;click&#39",{"_index":628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;enter&#39",{"_index":630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;keypress&#39",{"_index":629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["4",{"_index":181,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"overview.html":{}}}],["40",{"_index":448,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["5",{"_index":182,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["5/6",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":75,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"index.html":{}}}],["6.3.3",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":74,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"changelog.html":{},"index.html":{}}}],["7.0.2",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":183,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["8/11",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":167,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["83",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["_focus",{"_index":497,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["abov",{"_index":781,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":707,"title":{},"body":{"classes/konsole.html":{}}}],["action",{"_index":40,"title":{},"body":{"injectables/DynamicComponentService.html":{},"license.html":{}}}],["actual_compon",{"_index":260,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["ad",{"_index":553,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["add",{"_index":12,"title":{},"body":{"injectables/DynamicComponentService.html":{},"changelog.html":{},"index.html":{}}}],["addaninviewpagetopag",{"_index":502,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["addlist",{"_index":503,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["addlist(item",{"_index":518,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["afterviewinit",{"_index":496,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["again",{"_index":492,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["allen",{"_index":753,"title":{},"body":{"license.html":{}}}],["allow",{"_index":39,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["altern",{"_index":664,"title":{},"body":{"classes/konsole.html":{}}}],["and/or",{"_index":774,"title":{},"body":{"license.html":{}}}],["angular",{"_index":570,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/anim",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":219,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":61,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["anoth",{"_index":491,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["appcompon",{"_index":647,"title":{},"body":{"index.html":{}}}],["appli",{"_index":165,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["appmodul",{"_index":644,"title":{},"body":{"index.html":{}}}],["arg",{"_index":690,"title":{},"body":{"classes/konsole.html":{}}}],["argument",{"_index":380,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["aris",{"_index":803,"title":{},"body":{"license.html":{}}}],["array",{"_index":313,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["array.from(parentlistel.queryselectorall('ngui",{"_index":432,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["array.from(this.item",{"_index":351,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["array.from(this.itemsbackup",{"_index":338,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["arrow",{"_index":444,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["associ",{"_index":763,"title":{},"body":{"license.html":{}}}],["attribut",{"_index":47,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["author",{"_index":794,"title":{},"body":{"license.html":{}}}],["autocomplet",{"_index":411,"title":{},"body":{"directives/NguiListItemDirective.html":{},"index.html":{}}}],["autocomplete'},{'nam",{"_index":246,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["autocomplete.compon",{"_index":393,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["autocomplete.component.t",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["autocompletecompon",{"_index":376,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["back",{"_index":494,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["backup",{"_index":291,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["basic",{"_index":658,"title":{},"body":{"index.html":{}}}],["be",{"_index":529,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["befor",{"_index":41,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewPageComponent.html":{}}}],["better",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["block",{"_index":144,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["blur",{"_index":163,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["bluren",{"_index":154,"title":{},"body":{"components/NguiInviewComponent.html":{},"changelog.html":{}}}],["boolean",{"_index":328,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"overview.html":{}}}],["bottom",{"_index":490,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["bottominview",{"_index":505,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["break",{"_index":446,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["brows",{"_index":806,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":616,"title":{},"body":{"dependencies.html":{},"classes/konsole.html":{},"modules.html":{}}}],["browsermodul",{"_index":645,"title":{},"body":{"index.html":{}}}],["c",{"_index":752,"title":{},"body":{"license.html":{}}}],["call",{"_index":347,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["callback",{"_index":211,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["case",{"_index":441,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["cdr",{"_index":498,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["cdref",{"_index":310,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["chang",{"_index":334,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["changedetectorref",{"_index":311,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["changelog",{"_index":564,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":759,"title":{},"body":{"license.html":{}}}],["check",{"_index":521,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["child",{"_index":360,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["claim",{"_index":797,"title":{},"body":{"license.html":{}}}],["class",{"_index":59,"title":{"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"index.html":{},"classes/konsole.html":{},"overview.html":{}}}],["click",{"_index":369,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["cluster_nguicommonmodul",{"_index":88,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguicommonmodule_export",{"_index":90,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguicommonmodule_import",{"_index":89,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodul",{"_index":277,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule_declar",{"_index":278,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule_export",{"_index":279,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguilistmodul",{"_index":464,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_declar",{"_index":465,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_export",{"_index":467,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_import",{"_index":466,"title":{},"body":{"modules/NguiListModule.html":{}}}],["cluster_nguiutilsmodul",{"_index":472,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_declar",{"_index":473,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_export",{"_index":474,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_provid",{"_index":475,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["code",{"_index":649,"title":{},"body":{"index.html":{}}}],["collect",{"_index":657,"title":{},"body":{"index.html":{}}}],["common",{"_index":633,"title":{},"body":{"index.html":{}}}],["common.module.t",{"_index":97,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["common/src/lib/ngui",{"_index":6,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["commonmodul",{"_index":281,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["compid",{"_index":69,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["compon",{"_index":14,"title":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component'",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["component.servic",{"_index":479,"title":{},"body":{"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{}}}],["component.service.t",{"_index":8,"title":{},"body":{"injectables/DynamicComponentService.html":{},"coverage.html":{}}}],["component.service.ts:41",{"_index":55,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:43",{"_index":26,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:55",{"_index":33,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:65",{"_index":53,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component_templ",{"_index":244,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["componentfactoryresolv",{"_index":54,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref",{"_index":51,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["componentref.inst",{"_index":79,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref.instance.id",{"_index":77,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref.location.nativeelement.setattribute('id",{"_index":76,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["condit",{"_index":780,"title":{},"body":{"license.html":{}}}],["config",{"_index":186,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"changelog.html":{}}}],["configur",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":804,"title":{},"body":{"license.html":{}}}],["console.debug",{"_index":688,"title":{},"body":{"classes/konsole.html":{}}}],["console.debug.apply(consol",{"_index":726,"title":{},"body":{"classes/konsole.html":{}}}],["console.error",{"_index":542,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["console.error(`error",{"_index":720,"title":{},"body":{"classes/konsole.html":{}}}],["console.error.apply(consol",{"_index":734,"title":{},"body":{"classes/konsole.html":{}}}],["console.info",{"_index":695,"title":{},"body":{"classes/konsole.html":{}}}],["console.info.apply(consol",{"_index":730,"title":{},"body":{"classes/konsole.html":{}}}],["console.log",{"_index":554,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["console.log('alreadi",{"_index":551,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["console.log('nguiinviewpagecomponent.ngondestroy",{"_index":346,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["console.log('nguiinviewpagecomponent.setitem",{"_index":352,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["console.log.apply(consol",{"_index":728,"title":{},"body":{"classes/konsole.html":{}}}],["console.warn",{"_index":706,"title":{},"body":{"classes/konsole.html":{}}}],["console.warn.apply(consol",{"_index":732,"title":{},"body":{"classes/konsole.html":{}}}],["const",{"_index":66,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["constructor(@inject(componentfactoryresolv",{"_index":63,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["constructor(el",{"_index":157,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{}}}],["constructor(factoryresolv",{"_index":24,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["constructor(publ",{"_index":363,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["constructor(render",{"_index":506,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["contain",{"_index":535,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["content",{"_index":289,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentchild",{"_index":216,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentchild(templateref",{"_index":214,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentsel",{"_index":302,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["contract",{"_index":800,"title":{},"body":{"license.html":{}}}],["control",{"_index":161,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["copi",{"_index":330,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"license.html":{}}}],["copyright",{"_index":751,"title":{},"body":{"license.html":{}}}],["core",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":580,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creat",{"_index":57,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["createcompn",{"_index":38,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcompon",{"_index":21,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcomponent(compon",{"_index":31,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["current",{"_index":685,"title":{},"body":{"classes/konsole.html":{}}}],["damag",{"_index":798,"title":{},"body":{"license.html":{}}}],["deal",{"_index":764,"title":{},"body":{"license.html":{}}}],["debug",{"_index":670,"title":{},"body":{"classes/konsole.html":{}}}],["debug(...arg",{"_index":686,"title":{},"body":{"classes/konsole.html":{}}}],["declar",{"_index":86,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"overview.html":{}}}],["decor",{"_index":213,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["default",{"_index":171,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["defaultinviewhandl",{"_index":149,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["defaultinviewhandler(entri",{"_index":192,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["defin",{"_index":25,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["demoobject",{"_index":634,"title":{},"body":{"index.html":{}}}],["depend",{"_index":84,"title":{"dependencies.html":{}},"body":{"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprec",{"_index":185,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["descript",{"_index":9,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["destroy",{"_index":303,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["direct",{"_index":242,"title":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["display",{"_index":143,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["distribut",{"_index":772,"title":{},"body":{"license.html":{}}}],["document",{"_index":581,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentationcod",{"_index":635,"title":{},"body":{"index.html":{}}}],["dom",{"_index":126,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["down",{"_index":420,"title":{},"body":{"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["dyn",{"_index":71,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["dynam",{"_index":15,"title":{},"body":{"injectables/DynamicComponentService.html":{},"dependencies.html":{}}}],["dynamical",{"_index":516,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["dynamiccomponentservic",{"_index":1,"title":{"injectables/DynamicComponentService.html":{}},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["e.g",{"_index":44,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["effect",{"_index":164,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["el",{"_index":378,"title":{},"body":{"directives/NguiListItemDirective.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":130,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["elementref",{"_index":158,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["empti",{"_index":288,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["emptyitem",{"_index":305,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["enter",{"_index":454,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["enter(13",{"_index":450,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["entri",{"_index":198,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entries.foreach((entri",{"_index":230,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entry.intersectionratio",{"_index":240,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["entry['isintersect",{"_index":232,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entrycompon",{"_index":469,"title":{},"body":{"modules/NguiListModule.html":{}}}],["env",{"_index":717,"title":{},"body":{"classes/konsole.html":{}}}],["error",{"_index":299,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["error('ngui",{"_index":409,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["error(...arg",{"_index":691,"title":{},"body":{"classes/konsole.html":{}}}],["esc",{"_index":357,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["esc(27",{"_index":451,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["escap",{"_index":354,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["etc",{"_index":48,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["even",{"_index":327,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["event",{"_index":137,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["event.additems(item",{"_index":508,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["event.key",{"_index":453,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["event.keycod",{"_index":428,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["event.t",{"_index":601,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["event.which",{"_index":427,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["eventemitt",{"_index":189,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["exampl",{"_index":138,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["export",{"_index":62,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"index.html":{},"classes/konsole.html":{},"overview.html":{}}}],["express",{"_index":788,"title":{},"body":{"license.html":{}}}],["factori",{"_index":58,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["factory.create(this.rootviewcontainer.parentinjector",{"_index":68,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["factoryresolv",{"_index":18,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["fals",{"_index":207,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"classes/konsole.html":{},"license.html":{}}}],["fill",{"_index":509,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["fire",{"_index":134,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["fireev",{"_index":482,"title":{},"body":{"modules/NguiUtilsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["fireevent(el",{"_index":627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["first",{"_index":323,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["fit",{"_index":791,"title":{},"body":{"license.html":{}}}],["focu",{"_index":370,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["focus",{"_index":460,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["follow",{"_index":779,"title":{},"body":{"license.html":{}}}],["formsmodul",{"_index":646,"title":{},"body":{"index.html":{}}}],["found",{"_index":397,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{}}}],["found.t",{"_index":558,"title":{},"body":{"classes/NoMatchFound.html":{},"coverage.html":{}}}],["found.ts:2",{"_index":559,"title":{},"body":{"classes/NoMatchFound.html":{}}}],["free",{"_index":758,"title":{},"body":{"license.html":{}}}],["function",{"_index":515,"title":{"miscellaneous/functions.html":{}},"body":{"components/NguiVirtualListComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["furnish",{"_index":777,"title":{},"body":{"license.html":{}}}],["get",{"_index":563,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":517,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["grant",{"_index":757,"title":{},"body":{"license.html":{}}}],["greater",{"_index":689,"title":{},"body":{"classes/konsole.html":{}}}],["handl",{"_index":417,"title":{},"body":{"directives/NguiListItemDirective.html":{},"index.html":{}}}],["handleintersect",{"_index":150,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["handleintersect(entri",{"_index":199,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["handler",{"_index":170,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["height",{"_index":324,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["height}px",{"_index":350,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["herebi",{"_index":756,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":298,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["highlight",{"_index":660,"title":{},"body":{"index.html":{}}}],["highlight.pip",{"_index":477,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["highlight.pipe.t",{"_index":108,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{}}}],["highlight.pipe.ts:5",{"_index":115,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["holder",{"_index":795,"title":{},"body":{"license.html":{}}}],["host",{"_index":142,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["hostlisten",{"_index":368,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('blur",{"_index":463,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('click",{"_index":457,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('focu",{"_index":459,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('keydown",{"_index":423,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('keyup",{"_index":452,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostview",{"_index":43,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["html",{"_index":241,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{}}}],["html5",{"_index":652,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":321,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["http_provid",{"_index":648,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["ie11",{"_index":653,"title":{},"body":{"index.html":{}}}],["ig",{"_index":123,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["implement",{"_index":118,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["impli",{"_index":789,"title":{},"body":{"license.html":{}}}],["import",{"_index":60,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["includ",{"_index":767,"title":{},"body":{"license.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["indic",{"_index":209,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["info(...arg",{"_index":693,"title":{},"body":{"classes/konsole.html":{}}}],["inject",{"_index":0,"title":{"injectables/DynamicComponentService.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"coverage.html":{},"overview.html":{}}}],["inject(platform_id",{"_index":222,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["input",{"_index":153,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["input('item",{"_index":400,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["input('templ",{"_index":335,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["insert",{"_index":42,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["insertcompon",{"_index":22,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["insertcomponent(componentref",{"_index":52,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["instal",{"_index":641,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":413,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["instead",{"_index":187,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["interact",{"_index":662,"title":{},"body":{"index.html":{}}}],["intersect",{"_index":168,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["intersectionobserv",{"_index":175,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"index.html":{}}}],["intersectionobserver(this.handleintersect.bind(thi",{"_index":227,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["intersectionobserverentri",{"_index":231,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["intersectionobserverinit",{"_index":176,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["invalid",{"_index":721,"title":{},"body":{"classes/konsole.html":{}}}],["inview",{"_index":135,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["inview'},{'nam",{"_index":247,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["inview)=\"someth",{"_index":197,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.compon",{"_index":283,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview.component.t",{"_index":129,"title":{},"body":{"components/NguiInviewComponent.html":{},"coverage.html":{}}}],["inview.component.ts:36",{"_index":215,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:39",{"_index":184,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:42",{"_index":188,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:46",{"_index":174,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:48",{"_index":190,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:49",{"_index":191,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:51",{"_index":210,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:53",{"_index":208,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:55",{"_index":160,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:63",{"_index":205,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:75",{"_index":203,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:80",{"_index":200,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:96",{"_index":193,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.direct",{"_index":284,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview.directive.t",{"_index":261,"title":{},"body":{"directives/NguiInviewDirective.html":{},"coverage.html":{}}}],["inview.directive.ts:21",{"_index":272,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:24",{"_index":265,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:27",{"_index":266,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:30",{"_index":267,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:32",{"_index":264,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:35",{"_index":271,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:40",{"_index":270,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:52",{"_index":269,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:62",{"_index":268,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.modul",{"_index":100,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{}}}],["inview.module.t",{"_index":280,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview/ngui",{"_index":99,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{}}}],["inview/src/ngui",{"_index":128,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"coverage.html":{}}}],["inviewpag",{"_index":499,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["invok",{"_index":195,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["isinview",{"_index":146,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["islistload",{"_index":500,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["isplatformbrows",{"_index":218,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["isplatformbrowser(this.platformid",{"_index":225,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["it'",{"_index":485,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["item",{"_index":259,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["item.direct",{"_index":470,"title":{},"body":{"modules/NguiListModule.html":{}}}],["item.directive.t",{"_index":364,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["item.directive.ts:24",{"_index":379,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:26",{"_index":389,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:27",{"_index":390,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:28",{"_index":377,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:39",{"_index":388,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:52",{"_index":385,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:75",{"_index":387,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:88",{"_index":382,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:92",{"_index":383,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:98",{"_index":381,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["itemsbackup",{"_index":304,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["itemsbackup.length",{"_index":297,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["js",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":358,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["keyboard",{"_index":418,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyboard/mous",{"_index":661,"title":{},"body":{"index.html":{}}}],["keycod",{"_index":426,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keydown",{"_index":371,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keydown(ev",{"_index":384,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup",{"_index":372,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup(ent",{"_index":399,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup(ev",{"_index":386,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["kim",{"_index":754,"title":{},"body":{"license.html":{}}}],["kind",{"_index":787,"title":{},"body":{"license.html":{}}}],["konsol",{"_index":480,"title":{"classes/konsole.html":{}},"body":{"modules/NguiUtilsModule.html":{},"coverage.html":{},"classes/konsole.html":{}}}],["konsole.debug('no",{"_index":742,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.debug('y",{"_index":736,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.error('no",{"_index":746,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.error('y",{"_index":740,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.info('no",{"_index":744,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.info('y",{"_index":738,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log('no",{"_index":743,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log('y",{"_index":737,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('al",{"_index":735,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('error",{"_index":665,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('info",{"_index":747,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('non",{"_index":741,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('warn",{"_index":748,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.warn('no",{"_index":745,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.warn('y",{"_index":739,"title":{},"body":{"classes/konsole.html":{}}}],["konwole.log(1,2,3,4,5",{"_index":666,"title":{},"body":{"classes/konsole.html":{}}}],["last",{"_index":528,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["lazi",{"_index":650,"title":{},"body":{"index.html":{}}}],["left",{"_index":421,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["legend",{"_index":85,"title":{},"body":{"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"overview.html":{}}}],["less",{"_index":166,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["level",{"_index":683,"title":{},"body":{"classes/konsole.html":{}}}],["liabil",{"_index":799,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":796,"title":{},"body":{"license.html":{}}}],["licens",{"_index":749,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":768,"title":{},"body":{"license.html":{}}}],["line",{"_index":274,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["list",{"_index":252,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["list'},{'nam",{"_index":257,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["list.compon",{"_index":392,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["list.component.t",{"_index":484,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":520,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:114",{"_index":514,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:132",{"_index":519,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:61",{"_index":534,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:63",{"_index":538,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:65",{"_index":513,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:67",{"_index":512,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:86",{"_index":511,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:89",{"_index":527,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:90",{"_index":523,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:92",{"_index":530,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:93",{"_index":507,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:96",{"_index":537,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:97",{"_index":526,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:98",{"_index":525,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:99",{"_index":524,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.direct",{"_index":391,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["list.directive.t",{"_index":353,"title":{},"body":{"directives/NguiListDirective.html":{},"coverage.html":{}}}],["list.directive.ts:13",{"_index":361,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.directive.ts:15",{"_index":356,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.directive.ts:17",{"_index":362,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.modul",{"_index":102,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["list.module.t",{"_index":468,"title":{},"body":{"modules/NguiListModule.html":{}}}],["list/ngui",{"_index":101,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{}}}],["list/src/ngui",{"_index":285,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["list/src/no",{"_index":557,"title":{},"body":{"classes/NoMatchFound.html":{},"coverage.html":{}}}],["list/src/non",{"_index":560,"title":{},"body":{"classes/NoneSelect.html":{},"coverage.html":{}}}],["listdirect",{"_index":374,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listen",{"_index":131,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["listitem",{"_index":431,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitemndx",{"_index":433,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems.indexof(thislistitem",{"_index":434,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[0",{"_index":437,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[listitemndx",{"_index":436,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[listitems.length",{"_index":439,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["load",{"_index":495,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["log",{"_index":671,"title":{},"body":{"classes/konsole.html":{}}}],["log(...arg",{"_index":696,"title":{},"body":{"classes/konsole.html":{}}}],["log_level",{"_index":668,"title":{},"body":{"classes/konsole.html":{}}}],["loglevel",{"_index":669,"title":{},"body":{"classes/konsole.html":{}}}],["loglevel.touppercas",{"_index":712,"title":{},"body":{"classes/konsole.html":{}}}],["loglevels.indexof(loglevel",{"_index":714,"title":{},"body":{"classes/konsole.html":{}}}],["lt;ng",{"_index":301,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["make",{"_index":487,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["match",{"_index":81,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["math.floor(math.random",{"_index":72,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["medium",{"_index":640,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":790,"title":{},"body":{"license.html":{}}}],["merg",{"_index":770,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":109,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["method",{"_index":20,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["miscellan",{"_index":625,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":750,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":769,"title":{},"body":{"license.html":{}}}],["modul",{"_index":82,"title":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"modules.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mousedown",{"_index":458,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["name",{"_index":29,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["necessari",{"_index":522,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["new",{"_index":121,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["nextlistitem",{"_index":435,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["nextlistitem.focu",{"_index":449,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["nextsibl",{"_index":365,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["ngafterviewinit",{"_index":504,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ngmodul",{"_index":98,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":151,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["ngoninit",{"_index":152,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["ngui",{"_index":70,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"index.html":{}}}],["ngui/common",{"_index":631,"title":{},"body":{"index.html":{}}}],["nguiautocompletecompon",{"_index":245,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguicommonmodul",{"_index":83,"title":{"modules/NguiCommonModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguihighlight",{"_index":110,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["nguihighlightpip",{"_index":106,"title":{"pipes/NguiHighlightPipe.html":{}},"body":{"pipes/NguiHighlightPipe.html":{},"modules/NguiUtilsModule.html":{},"coverage.html":{},"overview.html":{}}}],["nguihilight",{"_index":659,"title":{},"body":{"index.html":{}}}],["nguiinview",{"_index":254,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiinviewcompon",{"_index":125,"title":{"components/NguiInviewComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguiinviewdirect",{"_index":253,"title":{"directives/NguiInviewDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguiinviewmodul",{"_index":91,"title":{"modules/NguiInviewModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguiinviewpag",{"_index":536,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["nguiinviewpagecompon",{"_index":248,"title":{"components/NguiInviewPageComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistdirect",{"_index":256,"title":{"directives/NguiListDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistitemdirect",{"_index":258,"title":{"directives/NguiListItemDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistmodul",{"_index":92,"title":{"modules/NguiListModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguioutview",{"_index":262,"title":{},"body":{"directives/NguiInviewDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguioutview]'},{'nam",{"_index":255,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiutilsmodul",{"_index":93,"title":{"modules/NguiUtilsModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguivirtuallistcompon",{"_index":250,"title":{"components/NguiVirtualListComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguivirtuallistcomponent.addlist",{"_index":555,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["noinspect",{"_index":724,"title":{},"body":{"classes/konsole.html":{}}}],["nomatchfound",{"_index":396,"title":{"classes/NoMatchFound.html":{}},"body":{"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{},"coverage.html":{}}}],["none",{"_index":395,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["noneselect",{"_index":394,"title":{"classes/NoneSelect.html":{}},"body":{"directives/NguiListItemDirective.html":{},"classes/NoneSelect.html":{},"coverage.html":{}}}],["noninfring",{"_index":793,"title":{},"body":{"license.html":{}}}],["notic",{"_index":782,"title":{},"body":{"license.html":{}}}],["notinview",{"_index":136,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["npm",{"_index":642,"title":{},"body":{"index.html":{}}}],["num",{"_index":295,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["number",{"_index":294,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["object",{"_index":401,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["object.keys(this.log_level",{"_index":713,"title":{},"body":{"classes/konsole.html":{}}}],["observ",{"_index":147,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["observeropt",{"_index":155,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"changelog.html":{}}}],["obtain",{"_index":761,"title":{},"body":{"license.html":{}}}],["on",{"_index":722,"title":{},"body":{"classes/konsole.html":{}}}],["once80pctvis",{"_index":148,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["ondestroy",{"_index":140,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["oninit",{"_index":139,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["option",{"_index":30,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["otherwis",{"_index":802,"title":{},"body":{"license.html":{}}}],["out",{"_index":96,"title":{},"body":{"modules/NguiCommonModule.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":156,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["outview",{"_index":287,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["overview",{"_index":807,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":609,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":296,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["page'},{'nam",{"_index":249,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["page.compon",{"_index":471,"title":{},"body":{"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{}}}],["page.component.t",{"_index":286,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:107",{"_index":315,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:122",{"_index":320,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:56",{"_index":333,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:60",{"_index":314,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:63",{"_index":331,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:65",{"_index":332,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:67",{"_index":329,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:72",{"_index":322,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:73",{"_index":312,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:84",{"_index":318,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:94",{"_index":317,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:99",{"_index":316,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.cont",{"_index":345,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["pagesref",{"_index":501,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["param",{"_index":703,"title":{},"body":{"classes/konsole.html":{}}}],["paramet",{"_index":27,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["parent",{"_index":410,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parentlistcomp",{"_index":366,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parentlistel",{"_index":429,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parseint('00000",{"_index":675,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00001",{"_index":676,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00010",{"_index":677,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00100",{"_index":678,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('01000",{"_index":679,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('10000",{"_index":680,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('11111",{"_index":681,"title":{},"body":{"classes/konsole.html":{}}}],["particular",{"_index":792,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":755,"title":{},"body":{"license.html":{}}}],["permit",{"_index":776,"title":{},"body":{"license.html":{}}}],["person",{"_index":760,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":105,"title":{"pipes/NguiHighlightPipe.html":{}},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["pipetransform",{"_index":117,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["platform_id",{"_index":217,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["platformid",{"_index":159,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["pleas",{"_index":655,"title":{},"body":{"index.html":{}}}],["polyfil",{"_index":656,"title":{},"body":{"index.html":{}}}],["port",{"_index":493,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["portion",{"_index":785,"title":{},"body":{"license.html":{}}}],["posit",{"_index":133,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["press",{"_index":359,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["prevlistitem",{"_index":438,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["prevlistitem.focu",{"_index":445,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["prevsibl",{"_index":367,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["privat",{"_index":221,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["projects/.../fir",{"_index":626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngui",{"_index":5,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["properti",{"_index":17,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["provid",{"_index":10,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":263,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["publish",{"_index":771,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":579,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["push",{"_index":486,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ratio",{"_index":169,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["re",{"_index":120,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["read",{"_index":533,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["reason",{"_index":36,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["refer",{"_index":35,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["regexp(search",{"_index":122,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["remain",{"_index":325,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["remov",{"_index":13,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["renam",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":308,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{}}}],["renderer2",{"_index":309,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["reportaccept",{"_index":638,"title":{},"body":{"index.html":{}}}],["reportarticl",{"_index":639,"title":{},"body":{"index.html":{}}}],["reportunit",{"_index":636,"title":{},"body":{"index.html":{}}}],["repres",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["requir",{"_index":300,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["requirednum",{"_index":710,"title":{},"body":{"classes/konsole.html":{}}}],["reset",{"_index":95,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["rest",{"_index":510,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["restor",{"_index":292,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["restoreitem",{"_index":306,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["restrict",{"_index":766,"title":{},"body":{"license.html":{}}}],["restrictionnum",{"_index":708,"title":{},"body":{"classes/konsole.html":{}}}],["result",{"_index":80,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["ret",{"_index":119,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["return",{"_index":34,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["right",{"_index":422,"title":{},"body":{"directives/NguiListItemDirective.html":{},"license.html":{}}}],["rootviewcontain",{"_index":19,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["row",{"_index":293,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["rxj",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["safari",{"_index":654,"title":{},"body":{"index.html":{}}}],["same",{"_index":326,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["save",{"_index":643,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":488,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["search",{"_index":114,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["see",{"_index":489,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["select",{"_index":355,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoneSelect.html":{}}}],["select.t",{"_index":561,"title":{},"body":{"classes/NoneSelect.html":{},"coverage.html":{}}}],["select.ts:2",{"_index":562,"title":{},"body":{"classes/NoneSelect.html":{}}}],["selector",{"_index":141,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["sell",{"_index":775,"title":{},"body":{"license.html":{}}}],["seper",{"_index":37,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["servic",{"_index":11,"title":{},"body":{"injectables/DynamicComponentService.html":{},"index.html":{}}}],["set",{"_index":46,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["setitem",{"_index":307,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["setitems(item",{"_index":319,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["setloglevel",{"_index":672,"title":{},"body":{"classes/konsole.html":{}}}],["setloglevel(loglevel",{"_index":698,"title":{},"body":{"classes/konsole.html":{}}}],["shall",{"_index":783,"title":{},"body":{"license.html":{}}}],["skip",{"_index":552,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["softwar",{"_index":762,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["src/dynam",{"_index":478,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/fire",{"_index":483,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/konsol",{"_index":481,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/ngui",{"_index":282,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["start",{"_index":206,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["statement",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":667,"title":{},"body":{"classes/konsole.html":{}}}],["still",{"_index":531,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["stop",{"_index":204,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["string",{"_index":113,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["style",{"_index":45,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["subject",{"_index":778,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":773,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":784,"title":{},"body":{"license.html":{}}}],["support",{"_index":569,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":805,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":440,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tabindex",{"_index":398,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tabl",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":145,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["templateref",{"_index":212,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["test",{"_index":637,"title":{},"body":{"index.html":{}}}],["text",{"_index":116,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["text.replace(r",{"_index":124,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["this.autocompletecompon",{"_index":407,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.bluren",{"_index":237,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.bottominview.emit(thi",{"_index":550,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.bottominview.observers.length",{"_index":541,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.cdref.detectchang",{"_index":342,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.contentsel",{"_index":343,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.defaultinviewhandler(entri",{"_index":234,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.destroy",{"_index":348,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.dynamiccomponentservice.createcomponent(nguiinviewpagecompon",{"_index":545,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.dynamiccomponentservice.insertcomponent(this.inviewpag",{"_index":547,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.el.nativeel",{"_index":425,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.el.nativeelement.innerhtml",{"_index":415,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.element.nativeelement.getboundingclientrect().height",{"_index":349,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.element.nativeelement.queryselector('.inview",{"_index":344,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.factoryresolv",{"_index":64,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.factoryresolver.resolvecomponentfactory(compon",{"_index":67,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.inview.emit(entri",{"_index":235,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.inview.observers.length",{"_index":239,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.inviewpag",{"_index":544,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpage.instance.setitems(item",{"_index":556,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpage.instance.templ",{"_index":548,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpages.push(this.inviewpag",{"_index":549,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.isinview",{"_index":233,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.islistload",{"_index":543,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.item",{"_index":337,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.itemsbackup",{"_index":339,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.listdirect",{"_index":405,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.log_levels[param",{"_index":711,"title":{},"body":{"classes/konsole.html":{}}}],["this.log_levels[this.loglevel",{"_index":709,"title":{},"body":{"classes/konsole.html":{}}}],["this.loglevel",{"_index":719,"title":{},"body":{"classes/konsole.html":{}}}],["this.nguiinview.emit(entri",{"_index":275,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["this.nguioutview.emit(entri",{"_index":276,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["this.notinview.emit(entri",{"_index":236,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.object",{"_index":412,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.object.html",{"_index":416,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.observ",{"_index":226,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observer.disconnect",{"_index":229,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observer.observe(this.element.nativeel",{"_index":228,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observeropt",{"_index":224,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.once80pctvis",{"_index":238,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.opt",{"_index":223,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.outview",{"_index":336,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.pagesref",{"_index":546,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.parentlistcomp",{"_index":404,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.element.nativeel",{"_index":430,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.escaped.emit",{"_index":456,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.selected.emit(this.object",{"_index":455,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp['setfocus",{"_index":461,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp['setfocused']('listitem",{"_index":462,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.renderer.setattribute(this.el.nativeel",{"_index":402,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.renderer.setstyle(this.contentsel",{"_index":341,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.rootviewcontain",{"_index":65,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.rootviewcontainer.insert(componentref.hostview",{"_index":78,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.templ",{"_index":540,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.tolog('debug",{"_index":723,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('error",{"_index":733,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('info",{"_index":729,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('log",{"_index":727,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('warn",{"_index":731,"title":{},"body":{"classes/konsole.html":{}}}],["this.viewcontainer.clear",{"_index":414,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.virtuallistcompon",{"_index":406,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["thislistitem",{"_index":424,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["threshold",{"_index":177,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["throw",{"_index":408,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tolog",{"_index":673,"title":{},"body":{"classes/konsole.html":{}}}],["tolog(param",{"_index":700,"title":{},"body":{"classes/konsole.html":{}}}],["tort",{"_index":801,"title":{},"body":{"license.html":{}}}],["transform",{"_index":111,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["transform(text",{"_index":112,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["tree",{"_index":127,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["true",{"_index":173,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["ts",{"_index":220,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["tslint",{"_index":725,"title":{},"body":{"classes/konsole.html":{}}}],["tslint:dis",{"_index":273,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["type",{"_index":49,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["ui",{"_index":632,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":340,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["up",{"_index":419,"title":{},"body":{"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["us",{"_index":56,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":196,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["util",{"_index":651,"title":{},"body":{"index.html":{}}}],["utils.modul",{"_index":104,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["utils.module.t",{"_index":476,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["utils/ngui",{"_index":103,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiUtilsModule.html":{}}}],["utils/src/dynam",{"_index":7,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["utils/src/fir",{"_index":600,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["utils/src/konsole.t",{"_index":604,"title":{},"body":{"coverage.html":{},"classes/konsole.html":{}}}],["utils/src/konsole.ts:11",{"_index":682,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:22",{"_index":684,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:25",{"_index":701,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:33",{"_index":699,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:47",{"_index":687,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:55",{"_index":697,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:62",{"_index":694,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:70",{"_index":705,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:77",{"_index":692,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/ngui",{"_index":107,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{}}}],["valu",{"_index":172,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["var",{"_index":243,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["view",{"_index":290,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewchild",{"_index":539,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["viewchild('pag",{"_index":532,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["viewcontain",{"_index":373,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["viewcontainerref",{"_index":32,"title":{},"body":{"injectables/DynamicComponentService.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewport",{"_index":132,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["virtual",{"_index":251,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["virtuallistcompon",{"_index":375,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["visibl",{"_index":201,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["void",{"_index":202,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["warn",{"_index":674,"title":{},"body":{"classes/konsole.html":{}}}],["warn(...arg",{"_index":704,"title":{},"body":{"classes/konsole.html":{}}}],["warranti",{"_index":786,"title":{},"body":{"license.html":{}}}],["whether",{"_index":162,"title":{},"body":{"components/NguiInviewComponent.html":{},"license.html":{}}}],["window",{"_index":715,"title":{},"body":{"classes/konsole.html":{}}}],["window.consol",{"_index":702,"title":{},"body":{"classes/konsole.html":{}}}],["window.konsol",{"_index":663,"title":{},"body":{"classes/konsole.html":{}}}],["window.sessionstorag",{"_index":716,"title":{},"body":{"classes/konsole.html":{}}}],["window.sessionstorage.setitem('konsole.log_level",{"_index":718,"title":{},"body":{"classes/konsole.html":{}}}],["without",{"_index":765,"title":{},"body":{"license.html":{}}}],["won't",{"_index":194,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["ye",{"_index":50,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["zone.j",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":94,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/DynamicComponentService.html":{"url":"injectables/DynamicComponentService.html","title":"injectable - DynamicComponentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DynamicComponentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts\n        \n\n            \n                Description\n            \n            \n                Provide service to add or remove component dynamically\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                factoryResolver\n                            \n                            \n                                rootViewContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createComponent\n                            \n                            \n                                insertComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factoryResolver\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateComponent(component: any, into?: ViewContainerRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            returns component reference\nThe reason to seperate createCompnent and insertComponent is\nto allow some actions before we insert into a hostView.\ne.g styling, setting attributes, etc\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        into\n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ninsertComponent(componentRef: ComponentRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            insert component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentRef\n                                                        \n                                                                    ComponentRef\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Component\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            factoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        factoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:41\n                            \n                        \n\n                \n                    \n                        used to create a factory from a component class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootViewContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rootViewContainer:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:43\n                            \n                        \n\n                \n                    \n                        defines where a dynamic components insert into \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  ViewContainerRef\n} from '@angular/core';\n\n/**\n * Provide service to add or remove component dynamically\n */\n@Injectable()\nexport class DynamicComponentService {\n  /** used to create a factory from a component class */\n  factoryResolver: ComponentFactoryResolver;\n  /** defines where a dynamic components insert into */\n  rootViewContainer: ViewContainerRef;\n\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\n    this.factoryResolver = factoryResolver;\n  }\n\n  /**\n   * returns component reference\n   * The reason to seperate `createCompnent` and `insertComponent` is\n   * to allow some actions before we insert into a hostView.\n   * e.g styling, setting attributes, etc\n   */\n  createComponent(component: any, into?: ViewContainerRef): ComponentRef {\n    this.rootViewContainer = into || this.rootViewContainer;\n    const factory = this.factoryResolver.resolveComponentFactory(component);\n\n    return factory.create(this.rootViewContainer.parentInjector);\n  }\n\n  /**\n   * insert component\n   */\n  insertComponent(componentRef: ComponentRef): Component {\n    const compId = `ngui-dyn-${Math.floor(Math.random() * 10 ** 7) + 10 ** 6}`;\n    componentRef.location.nativeElement.setAttribute('id', compId);\n    componentRef.instance.id = compId;\n\n    this.rootViewContainer.insert(componentRef.hostView);\n\n    return componentRef.instance;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiCommonModule.html":{"url":"modules/NguiCommonModule.html","title":"module - NguiCommonModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiCommonModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiCommonModule\n\n\n\ncluster_NguiCommonModule_imports\n\n\n\ncluster_NguiCommonModule_exports\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\n\n\nNguiCommonModule\n\nNguiCommonModule\n\nNguiCommonModule -->\n\nNguiInviewModule->NguiCommonModule\n\n\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiCommonModule -->\n\nNguiListModule->NguiCommonModule\n\n\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiCommonModule -->\n\nNguiUtilsModule->NguiCommonModule\n\n\n\n\n\nNguiInviewModule \n\nNguiInviewModule \n\nNguiInviewModule  -->\n\nNguiCommonModule->NguiInviewModule \n\n\n\n\n\nNguiListModule \n\nNguiListModule \n\nNguiListModule  -->\n\nNguiCommonModule->NguiListModule \n\n\n\n\n\nNguiUtilsModule \n\nNguiUtilsModule \n\nNguiUtilsModule  -->\n\nNguiCommonModule->NguiUtilsModule \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-common.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    NguiInviewModule\n                            \n                            \n                                    NguiListModule\n                            \n                            \n                                    NguiUtilsModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiInviewModule\n                            \n                            \n                                    NguiListModule\n                            \n                            \n                                    NguiUtilsModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {NguiInviewModule} from './ngui-inview/ngui-inview.module';\nimport {NguiListModule} from './ngui-list/ngui-list.module';\nimport {NguiUtilsModule} from './ngui-utils/ngui-utils.module';\n\n@NgModule({\n  imports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ],\n  exports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ]\n})\nexport class NguiCommonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NguiHighlightPipe.html":{"url":"pipes/NguiHighlightPipe.html","title":"pipe - NguiHighlightPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  NguiHighlightPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        nguiHighlight\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(text: string, search: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        search\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'nguiHighlight' })\nexport class NguiHighlightPipe implements PipeTransform {\n  transform(text: string, search: string): string {\n    let ret = text;\n    if (search) {\n      const re  = new RegExp(search, 'ig');\n      ret = text.replace(re, match => `${match}`);\n    }\n\n    return ret;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiInviewComponent.html":{"url":"components/NguiInviewComponent.html","title":"component - NguiInviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiInviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts\n\n\n    \n        Description\n    \n    \n        An element that listens to viewport positioning and fires inView and notInview events\nexample\n * \n *   \n * \n *\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-inview\n            \n\n\n            \n                styles\n                :host {display: block;}\n            \n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isInview\n                            \n                            \n                                observer\n                            \n                            \n                                once80PctVisible\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultInviewHandler\n                            \n                            \n                                handleIntersect\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEnabled\n                            \n                            \n                                observerOptions\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                inview\n                            \n                            \n                                notInview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blurEnabled\n                    \n                    \n                        Controls whether blur effect is applied to a component with less than 80% intersection ratio.\nOnly applies when there are no \"inview\" event handlers defined.\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        observerOptions\n                    \n                    \n                        IntersectionObserver options \n\n                            \n                            Type :    IntersectionObserverInit\n\n                            \n                        \n                            Default value : {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]}\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Deprecated config. Use observerOptions instead.\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        inview\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        notInview\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultInviewHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultInviewHandler(entry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            default intersection handler, which sets blur dependes on intersection ratio\nthis won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleIntersect\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleIntersect(entries)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            fires (inview) and (notInview) events when this component is visible or not visible  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            stop IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Starts IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInview\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInview:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:53\n                            \n                        \n\n                \n                    \n                        indicates that this element is in viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        observer:     IntersectionObserver\n\n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            once80PctVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        once80PctVisible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:55\n                            \n                        \n\n                \n                    \n                        indicates that this element is 80% in viewport. Used by the default callback \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(TemplateRef)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:36\n                            \n                        \n\n                \n                    \n                         reference \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID,\n    TemplateRef\n} from '@angular/core';\n\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * An element that listens to viewport positioning and fires inView and notInview events\n * ### example\n * ```ts\n * \n *   \n * \n * ```\n */\n@Component({\n  selector: 'ngui-inview',\n  template: `\n        \n        \n    `,\n  styles: [':host {display: block;}']\n})\nexport class NguiInviewComponent implements OnInit, OnDestroy {\n    /**  reference */\n  @ContentChild(TemplateRef) template: TemplateRef;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n  /** Controls whether blur effect is applied to a component with less than 80% intersection ratio.\n   * Only applies when there are no \"inview\" event handlers defined.\n   **/\n  @Input() blurEnabled = true;\n\n  @Output() inview: EventEmitter = new EventEmitter();\n  @Output() notInview: EventEmitter = new EventEmitter();\n\n  observer: IntersectionObserver;\n    /** indicates that this element is in viewport */\n  isInview = false;\n    /** indicates that this element is 80% in viewport. Used by the default callback */\n  once80PctVisible = false;\n\n  constructor(\n        private element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** stop IntersectionObserver */\n  ngOnDestroy(): void {\n    this.observer.disconnect();\n  }\n\n    /** fires (inview) and (notInview) events when this component is visible or not visible  */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.isInview = true;\n        this.defaultInviewHandler(entry);\n        this.inview.emit(entry);\n      } else {\n        this.notInview.emit(entry);\n      }\n    });\n  }\n\n    /**\n     * default intersection handler, which sets blur dependes on intersection ratio\n     * this won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n     */\n  defaultInviewHandler(entry): any {\n    if (!this.blurEnabled || this.once80PctVisible || this.inview.observers.length) {\n      return;\n    }\n\n    if (entry.intersectionRatio \n    \n\n\n    \n            :host {display: block;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiInviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiInviewDirective.html":{"url":"directives/NguiInviewDirective.html","title":"directive - NguiInviewDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NguiInviewDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts\n        \n\n            \n                Description\n            \n            \n                Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [nguiInview], [nguiOutview]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                            \n                                observer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleIntersect\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                observerOptions\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nguiInview\n                            \n                            \n                                nguiOutview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        observerOptions\n                    \n                    \n                        IntersectionObserver options \n\n                            \n                            Type :    IntersectionObserverInit\n\n                            \n                        \n                            Default value : {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]}\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Deprecated config. Use observerOptions instead.\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:27\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        nguiInview\n                    \n                    \n                        Event that will be fired when in viewport \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nguiOutview\n                    \n                    \n                        Event that will be fired when out of  viewport \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:32\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleIntersect\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleIntersect(entries)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:62\n                            \n                        \n\n\n                \n                    \n                            Fires (nguiInview) event when this element is in viewport\n  and fires (nguiOutview) event when this element is not in viewport\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:52\n                            \n                        \n\n\n                \n                    \n                            Stops IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:40\n                            \n                        \n\n\n                \n                    \n                            Starts IntersectionObserver \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        observer:     IntersectionObserver\n\n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n */\n@Directive({\n    selector: '[nguiInview], [nguiOutview]' // tslint:disable-line\n})\nexport class NguiInviewDirective implements OnInit, OnDestroy {\n  observer: IntersectionObserver;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n\n    /** Event that will be fired when in viewport */\n  @Output() nguiInview: EventEmitter = new EventEmitter();\n    /** Event that will be fired when out of  viewport */\n  @Output() nguiOutview: EventEmitter = new EventEmitter();\n\n  constructor(\n        public element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** Stops IntersectionObserver */\n  ngOnDestroy(): void {\n    if (isPlatformBrowser(this.platformId) && this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n    /**\n     * Fires (nguiInview) event when this element is in viewport\n     *  and fires (nguiOutview) event when this element is not in viewport\n     */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.nguiInview.emit(entry);\n      } else {\n        this.nguiOutview.emit(entry);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiInviewModule.html":{"url":"modules/NguiInviewModule.html","title":"module - NguiInviewModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiInviewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiInviewModule\n\n\n\ncluster_NguiInviewModule_declarations\n\n\n\ncluster_NguiInviewModule_exports\n\n\n\n\nNguiInviewComponent\n\nNguiInviewComponent\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\nNguiInviewModule -->\n\nNguiInviewComponent->NguiInviewModule\n\n\n\n\n\nNguiInviewDirective\n\nNguiInviewDirective\n\nNguiInviewModule -->\n\nNguiInviewDirective->NguiInviewModule\n\n\n\n\n\nNguiInviewComponent \n\nNguiInviewComponent \n\nNguiInviewComponent  -->\n\nNguiInviewModule->NguiInviewComponent \n\n\n\n\n\nNguiInviewDirective \n\nNguiInviewDirective \n\nNguiInviewDirective  -->\n\nNguiInviewModule->NguiInviewDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-inview/ngui-inview.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NguiInviewComponent\n                            \n                            \n                                NguiInviewDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiInviewComponent\n                            \n                            \n                                    NguiInviewDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiInviewComponent} from './src/ngui-inview.component';\nimport {NguiInviewDirective} from './src/ngui-inview.directive';\n\nexport {NguiInviewComponent, NguiInviewDirective};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ],\n  exports: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ]\n})\nexport class NguiInviewModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiInviewPageComponent.html":{"url":"components/NguiInviewPageComponent.html","title":"component - NguiInviewPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiInviewPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts\n\n\n    \n        Description\n    \n    \n        A block of component that listens to inView and outView events,\nso that it empties contents when out of view after backup items\nand restores the contents when in view\nexample\n * \n *   \n *     \n *       row number: {{ num }}\n *     \n *   \n * \n *\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-inview-page\n            \n\n\n            \n                styles\n                \n    :host {display: block}\n  \n            \n\n            \n                template\n                \n  \n  \n  \n  \n  {{ itemsBackup.length }} items hidden\n\n\n\n   Error: requires [items] \n   Error: requires &lt;ng-template>\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsEl\n                            \n                            \n                                destroyed\n                            \n                            \n                                itemsBackup\n                            \n                            \n                                options\n                            \n                            \n                                outView\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emptyItems\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                restoreItems\n                            \n                            \n                                setItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        List of elements that are used to render this element \n\n                            \n                            Type :    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nemptyItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Empty items when not in viewport, so that elements are not rendered\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restoreItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nrestoreItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Restore items when in viewport, so that elements are rendered\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetItems(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentsEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        contentsEl:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:72\n                            \n                        \n\n                \n                    \n                        The first element of this component.\nThe height of it remains the same even when items get empty out.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroyed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destroyed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemsBackup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemsBackup:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:67\n                            \n                        \n\n                \n                    \n                        The copy of items. This is set when this element is out of viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:63\n                            \n                        \n\n                \n                    \n                        IntersectionObserver options \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outView:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:65\n                            \n                        \n\n                \n                    \n                        Indicates that the page of out of viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(TemplateRef)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:56\n                            \n                        \n\n                \n                    \n                        Allow users to change the contents \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\n\n/**\n * A block of component that listens to inView and outView events,\n * so that it empties contents when out of view after backup items\n * and restores the contents when in view\n *\n * ### example\n * ```ts\n * \n *   \n *     \n *       row number: {{ num }}\n *     \n *   \n * \n * ```\n */\n@Component({\n  selector: 'ngui-inview-page',\n  template: `\n    \n      \n      \n      \n      \n      {{ itemsBackup.length }} items hidden\n    \n\n    \n       Error: requires [items] \n       Error: requires &lt;ng-template>\n    \n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiInviewPageComponent implements OnInit, OnDestroy {\n\n  /** Allow users to change the contents */\n  @ContentChild(TemplateRef) template: TemplateRef;\n  // @Input('template') template: TemplateRef;\n\n  /** List of elements that are used to render this element */\n  @Input() items: Array;\n\n  /** IntersectionObserver options */\n  options: any;\n  /** Indicates that the page of out of viewport */\n  outView = false;\n  /** The copy of items. This is set when this element is out of viewport */\n  itemsBackup: Array = [];\n  /**\n   * The first element of this component.\n   * The height of it remains the same even when items get empty out.\n   */\n  contentsEl: HTMLElement;\n  destroyed: boolean;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2,\n    private cdRef: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Restore items when in viewport, so that elements are rendered\n   */\n  restoreItems(): void {\n    if (this.outView) {\n      this.outView = false;\n      this.items = Array.from(this.itemsBackup || []);\n      this.itemsBackup = undefined;\n      this.renderer.setStyle(this.contentsEl, 'height', undefined);\n      this.cdRef.detectChanges();\n    }\n  }\n\n  ngOnInit(): void {\n    this.contentsEl =\n      this.element.nativeElement.querySelector('.inview-page.contents');\n  }\n\n  ngOnDestroy(): void {\n    console.log('NguiInviewPageComponent.ngOnDestroy() is called');\n    this.destroyed = true;\n  }\n\n  /**\n   * Empty items when not in viewport, so that elements are not rendered\n   */\n  emptyItems(): void {\n    if (this.items && this.contentsEl && !this.outView) {\n      // set height before emptying contents\n      const height = this.element.nativeElement.getBoundingClientRect().height;\n      this.renderer.setStyle(this.contentsEl, 'height', `${height}px`);\n\n      this.outView = true;\n      this.itemsBackup = Array.from(this.items || []);\n      this.items = undefined;\n      if (!this.destroyed) {\n        this.cdRef.detectChanges();\n      }\n    }\n  }\n\n  setItems(items: Array): void {\n    if (!this.destroyed) {\n      console.log('NguiInviewPageComponent.setItems() is called with', items);\n      this.items = items;\n      this.cdRef.detectChanges();\n    }\n  }\n\n}\n\n    \n\n\n    \n            \n    :host {display: block}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ itemsBackup.length }} items hidden   Error: requires [items]    Error: requires '\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiInviewPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiListDirective.html":{"url":"directives/NguiListDirective.html","title":"directive - NguiListDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NguiListDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        ngui-list\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                    \n                        Fired when ESC key is pressed from  \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Fired when child  is selected \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\n@Directive({\n  selector: 'ngui-list' // tslint:disable-line\n})\nexport class NguiListDirective {\n  /** Fired when child `` is selected */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `` */\n  @Output() escaped: EventEmitter = new EventEmitter();\n\n  constructor(public element: ElementRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiListItemDirective.html":{"url":"directives/NguiListItemDirective.html","title":"directive - NguiListItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NguiListItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        ngui-list-item\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nextSibling\n                            \n                            \n                                parentListComp\n                            \n                            \n                                prevSibling\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                click\n                            \n                            \n                                focus\n                            \n                            \n                                keydown\n                            \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2, viewContainer: ViewContainerRef, listDirective: NguiListDirective, virtualListComponent: NguiVirtualListComponent, autocompleteComponent: NguiAutocompleteComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        listDirective\n                                                  \n                                                        \n                                                                    NguiListDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualListComponent\n                                                  \n                                                        \n                                                                    NguiVirtualListComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autocompleteComponent\n                                                  \n                                                        \n                                                                    NguiAutocompleteComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nfocus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keydown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nkeydown(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyup\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nkeyup(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:75\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextSibling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextSibling:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentListComp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentListComp:     NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent\n\n                    \n                \n                    \n                        \n                            Type :     NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prevSibling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        prevSibling:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Host,\n  HostListener,\n  Input,\n  OnInit,\n  Optional,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NguiListDirective } from './ngui-list.directive';\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\nimport { NoneSelect } from './none-select';\nimport { NoMatchFound } from './no-match-found';\n\n// tabindex, keydown, keyup(ENTER, ESC), click\n@Directive({\n  selector: 'ngui-list-item' // tslint:disable-line\n})\nexport class NguiListItemDirective implements OnInit {\n  @Input('item') object: any; // tslint:disable-line\n\n  nextSibling: HTMLElement;\n  prevSibling: HTMLElement;\n  parentListComp: NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private viewContainer: ViewContainerRef,\n    @Optional() @Host() private listDirective: NguiListDirective,\n    @Optional() @Host() private virtualListComponent: NguiVirtualListComponent,\n    @Optional() @Host() private autocompleteComponent: NguiAutocompleteComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n    this.parentListComp = this.listDirective || this.virtualListComponent || this.autocompleteComponent;\n    if (!this.parentListComp) {\n      throw Error('ngui-list-item requires parent of ngui-list, ngui-virtual-list, or ngui-autocomplete.');\n    }\n    if ((this.object instanceof NoneSelect) || (this.object instanceof NoMatchFound)) {\n      this.viewContainer.clear();\n      this.el.nativeElement.innerHTML = this.object.html;\n    }\n  }\n\n  // handles keyboard up, down, left, right\n  @HostListener('keydown', ['$event']) keydown(event): void {\n    const thisListItem = this.el.nativeElement;\n    const keyCode = event.which || event.keyCode;\n    const parentListEl = this.parentListComp.element.nativeElement;\n    const listItems: Array\n      = Array.from(parentListEl.querySelectorAll('ngui-list-item'));\n    const listItemNdx = listItems.indexOf(thisListItem);\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\n\n    switch (keyCode) {\n    case 37: case 38: // up arrow, left arrow\n      prevListItem.focus();\n      break;\n    case 39: case 40: // down arrow, right arrow\n      nextListItem.focus();\n      break;\n    default:\n      break;\n    }\n  }\n\n  // handles keyboard enter(13), esc(27)\n  @HostListener('keyup', ['$event']) keyup(event): void {\n    switch (event.key) {\n    case 'Enter':\n      this.parentListComp.selected.emit(this.object);\n      break;\n    case 'Escape':\n      this.parentListComp.escaped.emit();\n      break;\n    default:\n      break;\n    }\n  }\n\n  @HostListener('click', ['$event']) mousedown(): void {\n    this.parentListComp.selected.emit(this.object);\n  }\n\n  @HostListener('focus', ['$event']) focused(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', true);\n    }\n  }\n\n  @HostListener('blur', ['$event']) blurred(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiListModule.html":{"url":"modules/NguiListModule.html","title":"module - NguiListModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiListModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiListModule\n\n\n\ncluster_NguiListModule_declarations\n\n\n\ncluster_NguiListModule_imports\n\n\n\ncluster_NguiListModule_exports\n\n\n\n\nNguiAutocompleteComponent\n\nNguiAutocompleteComponent\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiListModule -->\n\nNguiAutocompleteComponent->NguiListModule\n\n\n\n\n\nNguiInviewPageComponent\n\nNguiInviewPageComponent\n\nNguiListModule -->\n\nNguiInviewPageComponent->NguiListModule\n\n\n\n\n\nNguiListDirective\n\nNguiListDirective\n\nNguiListModule -->\n\nNguiListDirective->NguiListModule\n\n\n\n\n\nNguiListItemDirective\n\nNguiListItemDirective\n\nNguiListModule -->\n\nNguiListItemDirective->NguiListModule\n\n\n\n\n\nNguiVirtualListComponent\n\nNguiVirtualListComponent\n\nNguiListModule -->\n\nNguiVirtualListComponent->NguiListModule\n\n\n\n\n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent  -->\n\nNguiListModule->NguiAutocompleteComponent \n\n\n\n\n\nNguiInviewPageComponent \n\nNguiInviewPageComponent \n\nNguiInviewPageComponent  -->\n\nNguiListModule->NguiInviewPageComponent \n\n\n\n\n\nNguiListDirective \n\nNguiListDirective \n\nNguiListDirective  -->\n\nNguiListModule->NguiListDirective \n\n\n\n\n\nNguiListItemDirective \n\nNguiListItemDirective \n\nNguiListItemDirective  -->\n\nNguiListModule->NguiListItemDirective \n\n\n\n\n\nNguiVirtualListComponent \n\nNguiVirtualListComponent \n\nNguiVirtualListComponent  -->\n\nNguiListModule->NguiVirtualListComponent \n\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\nNguiListModule -->\n\nNguiInviewModule->NguiListModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/ngui-list.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NguiAutocompleteComponent\n                            \n                            \n                                NguiInviewPageComponent\n                            \n                            \n                                NguiListDirective\n                            \n                            \n                                NguiListItemDirective\n                            \n                            \n                                NguiVirtualListComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                NguiInviewPageComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    NguiInviewModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiAutocompleteComponent\n                            \n                            \n                                    NguiInviewPageComponent\n                            \n                            \n                                    NguiListDirective\n                            \n                            \n                                    NguiListItemDirective\n                            \n                            \n                                    NguiVirtualListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\nimport {NguiListItemDirective} from './src/ngui-list-item.directive';\nimport {NguiListDirective} from './src/ngui-list.directive';\nimport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\nimport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\nimport {NguiInviewModule} from '../ngui-inview/ngui-inview.module';\n\nexport {NguiAutocompleteComponent, NguiListItemDirective, NguiListDirective, NguiInviewPageComponent, NguiVirtualListComponent};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NguiInviewModule\n  ],\n  declarations: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  exports: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  entryComponents: [NguiInviewPageComponent]\n})\nexport class NguiListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiUtilsModule.html":{"url":"modules/NguiUtilsModule.html","title":"module - NguiUtilsModule","body":"\n                   \n\n\n\n\n  Modules\n  NguiUtilsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiUtilsModule\n\n\n\ncluster_NguiUtilsModule_declarations\n\n\n\ncluster_NguiUtilsModule_exports\n\n\n\ncluster_NguiUtilsModule_providers\n\n\n\n\nNguiHighlightPipe\n\nNguiHighlightPipe\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiUtilsModule -->\n\nNguiHighlightPipe->NguiUtilsModule\n\n\n\n\n\nNguiHighlightPipe \n\nNguiHighlightPipe \n\nNguiHighlightPipe  -->\n\nNguiUtilsModule->NguiHighlightPipe \n\n\n\n\n\nDynamicComponentService\n\nDynamicComponentService\n\nNguiUtilsModule -->\n\nDynamicComponentService->NguiUtilsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/ngui-utils.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NguiHighlightPipe\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DynamicComponentService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NguiHighlightPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\nimport {DynamicComponentService} from './src/dynamic-component.service';\nimport { konsole } from './src/konsole';\nimport { fireEvent } from './src/fire-event';\n\nexport {DynamicComponentService, NguiHighlightPipe, konsole, fireEvent};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NguiHighlightPipe],\n  exports: [NguiHighlightPipe],\n  providers: [DynamicComponentService]\n})\nexport class NguiUtilsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiVirtualListComponent.html":{"url":"components/NguiVirtualListComponent.html","title":"component - NguiVirtualListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiVirtualListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts\n\n\n    \n        Description\n    \n    \n        Virtual List\nThe  inserts  into\n when it is in viewport\nWhen it's inserted, it will be pushed down, which makes it out of viewport.\nUser scrolls down to see the bottom of the list,\nthen it will insert another  again.\n listens to (nguiInview) and (nguiOutview) events,\nwhen  is out of view port, it empties out the contents.\nand it restores back the contents when it is in viewport again.\nexample\n * \n *   \n *     Loading\n *     row number: {{ num }}\n *   \n * \n *\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-virtual-list\n            \n\n\n            \n                styles\n                \n    :host {display: block}\n  \n            \n\n            \n                template\n                \n   -->\n  \n   into #pages -->\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _focused\n                            \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                dynamicComponentService\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                inviewPage\n                            \n                            \n                                inviewPages\n                            \n                            \n                                isListLoading\n                            \n                            \n                                pagesRef\n                            \n                            \n                                    Public\n                                renderer\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAnInviewPageToPages\n                            \n                            \n                                addList\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottomInview\n                            \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, element: ElementRef, dynamicComponentService: DynamicComponentService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dynamicComponentService\n                                                  \n                                                        \n                                                                    DynamicComponentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        bottomInview\n                    \n                    \n                        Event fired when bottom of the virtual list is in view\nThe handler of this event must call $event.addItems(items: Array) to fill contents\nIf not, only the first page is loaded, and rest of the pages won't be loaded;\nexample\n   * \n   *   \n   *     \n   *        row number: {{ num }}\n   *     \n   *     Loading\n   *   \n   * \n   *\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                    \n                        Fired when ESC key is pressed from  \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Fired when child  is selected \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:65\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAnInviewPageToPages\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAnInviewPageToPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            When the bottom is inview port, this function is called\nIt will insert a dynamicall created NguiInviewPageComponent with the given template.\nIt will also fires (bottomInview) event, so that user can fill up items for the page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addList\n                            \n                            \n                        \n                    \n                \n                \n                    \naddList(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Check if necessary input and output is provided \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _focused\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _focused:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dynamicComponentService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dynamicComponentService:     DynamicComponentService\n\n                    \n                \n                    \n                        \n                            Type :     DynamicComponentService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inviewPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inviewPage:     ComponentRef\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:89\n                            \n                        \n\n                \n                    \n                        The last NguiInviewPageComponent being inserted \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inviewPages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inviewPages:     Array>\n\n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isListLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isListLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:92\n                            \n                        \n\n                \n                    \n                        Indicates if a page is still loading \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagesRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pagesRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('pages', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:61\n                            \n                        \n\n                \n                    \n                        the container NguiInviewPage will be inserted \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer2\n\n                    \n                \n                    \n                        \n                            Type :     Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(TemplateRef)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:63\n                            \n                        \n\n                \n                    \n                        Template of NguiInviewPage. Allow users to define their own template  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { DynamicComponentService } from '../../ngui-utils/src/dynamic-component.service';\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\n\n/**\n * Virtual List\n *\n * The `` inserts  into\n * `` when it is in viewport\n * When it's inserted, it will be pushed down, which makes it out of viewport.\n * User scrolls down to see the bottom of the list,\n * then it will insert another `` again.\n *\n *  listens to (nguiInview) and (nguiOutview) events,\n * when  is out of view port, it empties out the contents.\n * and it restores back the contents when it is in viewport again.\n *\n * ### example\n * ```ts\n * \n *   \n *     Loading\n *     row number: {{ num }}\n *   \n * \n * ```\n */\n@Component({\n  selector: 'ngui-virtual-list',\n  template: `\n    \n       -->\n      \n       into #pages -->\n      \n    \n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiVirtualListComponent implements AfterViewInit {\n\n  /** the container NguiInviewPage will be inserted */\n  @ViewChild('pages', {read: ViewContainerRef}) pagesRef: ViewContainerRef;\n  /** Template of NguiInviewPage. Allow users to define their own template  */\n  @ContentChild(TemplateRef) template: TemplateRef;\n  /** Fired when child `` is selected */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `` */\n  @Output() escaped: EventEmitter = new EventEmitter();\n\n  /**\n   * Event fired when bottom of the virtual list is in view\n   * The handler of this event must call `$event.addItems(items: Array)` to fill contents\n   * If not, only the first page is loaded, and rest of the pages won't be loaded;\n   *\n   * ### example\n   * ```ts\n   * \n   *   \n   *     \n   *        row number: {{ num }}\n   *     \n   *     Loading\n   *   \n   * \n   * ```\n   */\n  @Output() bottomInview: EventEmitter = new EventEmitter();\n\n  /** The last NguiInviewPageComponent being inserted */\n  inviewPage: ComponentRef;\n  _focused = false;\n  /** Indicates if a page is still loading */\n  isListLoading: boolean;\n  inviewPages: Array> = [];\n\n  constructor(\n    public renderer: Renderer2,\n    public element: ElementRef,\n    public dynamicComponentService: DynamicComponentService,\n    public cdr: ChangeDetectorRef\n  ) {}\n\n  /** Check if necessary input and output is provided */\n  ngAfterViewInit(): void {\n    if (!this.template || !this.bottomInview.observers.length) {\n      console.error(' requires [template] and {bottomInview)');\n    }\n  }\n\n  /**\n   * When the bottom is inview port, this function is called\n   * It will insert a dynamicall created NguiInviewPageComponent with the given template.\n   * It will also fires (bottomInview) event, so that user can fill up items for the page.\n   */\n  addAnInviewPageToPages(): void {\n    if (!this.isListLoading) {\n      this.isListLoading = true;\n\n      this.inviewPage =\n        this.dynamicComponentService.createComponent(NguiInviewPageComponent, this.pagesRef);\n      this.dynamicComponentService.insertComponent(this.inviewPage);\n\n      this.inviewPage.instance.template = this.template;\n      this.inviewPages.push(this.inviewPage);\n\n      this.bottomInview.emit(this); // fire event, so that user can load items\n    } else {\n      console.log('Already a page being inserted, skipping adding a page');\n    }\n  }\n\n  // set items of NguiInviewPageComponent\n  addList(items: Array): void {\n    this.isListLoading = false;\n    console.log('>>>>>> NguiVirtualListComponent.addList() is called()');\n    this.inviewPage.instance.setItems(items);\n  }\n\n}\n\n    \n\n\n    \n            \n    :host {display: block}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->     into #pages -->  '\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiVirtualListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoMatchFound.html":{"url":"classes/NoMatchFound.html","title":"class - NoMatchFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoMatchFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            html\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        html:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'No Match Found'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoMatchFound {\n  html = 'No Match Found';\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoneSelect.html":{"url":"classes/NoneSelect.html","title":"class - NoneSelect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoneSelect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/none-select.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            html\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        html:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Select'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/none-select.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoneSelect {\n  html = 'Select';\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.6.0 (2018-11-02)\n\nAdd support for Angular 7\n\n0.5.0 (2018-08-15)\n\nNew \"blurEnabled\" configuration option for \"ngui-inview\" component\n\"ngui-inview\" component's \"options\" config was renamed to \"observerOptions\" to better represent its purpose\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts\n            \n            \n                component\n            \n            \n                NguiInviewComponent\n            \n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts\n            \n            \n                directive\n            \n            \n                NguiInviewDirective\n            \n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts\n            \n            \n                component\n            \n            \n                NguiAutocompleteComponent\n            \n            \n                27 %\n                (12/43)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts\n            \n            \n                component\n            \n            \n                NguiInviewPageComponent\n            \n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts\n            \n            \n                directive\n            \n            \n                NguiListItemDirective\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts\n            \n            \n                directive\n            \n            \n                NguiListDirective\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts\n            \n            \n                component\n            \n            \n                NguiVirtualListComponent\n            \n            \n                55 %\n                (10/18)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts\n            \n            \n                class\n            \n            \n                NoMatchFound\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/none-select.ts\n            \n            \n                class\n            \n            \n                NoneSelect\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicComponentService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts\n            \n            \n                function\n            \n            \n                fireEvent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-utils/src/konsole.ts\n            \n            \n                class\n            \n            \n                konsole\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts\n            \n            \n                pipe\n            \n            \n                NguiHighlightPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.2\n        \n            @angular/common : ^7.0.2\n        \n            @angular/compiler : ^7.0.2\n        \n            @angular/core : ^7.0.2\n        \n            @angular/forms : ^7.0.2\n        \n            @angular/http : ^7.0.2\n        \n            @angular/platform-browser : ^7.0.2\n        \n            @angular/platform-browser-dynamic : ^7.0.2\n        \n            @angular/router : ^7.0.2\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.3.3\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fireEvent   (projects/.../fire-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fireEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nfireEvent(el, type, options: any)\n                    \n                \n\n\n\n\n                \n                    \n                            fire the given event with options on the element\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            fireEvent(el, &#39;click&#39;);\nfireEvent(el, &#39;keypress&#39;, {key: &#39;Enter&#39;});\n                                        \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ngui/common\nAngular 6 and 7 UI common directives, functions, services\n\n \n\n\nDemoObject DocumentationCode Coverage ReportUnit Test ReportAcceptance ReportArticle on Medium  \nInstall\n\ninstall @ngui/common\n\n$ npm install @ngui/common --save\nimport NguiCommonModule to your AppModule  \n\nimport { NguiInviewModule, NguiListModule, NguiUtilsModule } from '@ngui/common';\n\n@NgModule({\n  imports: [BrowserModule, FormsModule, NguiListModule, NguiInviewModule, NguiUtilsModule],\n  declarations: [AppComponent],\n  providers: [HTTP_PROVIDERS],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }Use it in your code\n\n\n  \nModules\nNguiInViewModule\nHandles lazy rendering of Angular components, which utilizes HTML5 IntersectionObserver.\nFor IE11 and Safari, please add polyfill for this module:\n\nngui-inview component\nngui-inview directive\n\nNguiUtilsModules\nCollection of basic utility functions\n\nDynamicComponentService\nnguiHilight pipe\nfireEvent function\n\nNguiListModule\nHandles list elements with highlight and keyboard/mouse interaction\n\nngui-inview-page component\nngui-list component\nngui-virtual-list component\nngui-autocomplete component\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/konsole.html":{"url":"classes/konsole.html","title":"class - konsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  konsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/konsole.ts\n        \n\n            \n                Description\n            \n            \n                window.konsole alternative\nexample\n * konsole.setLogLevel('error');\n * konwole.log(1,2,3,4,5);\n *\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                LOG_LEVELS\n                            \n                            \n                                    Static\n                                logLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                debug\n                            \n                            \n                                    Static\n                                error\n                            \n                            \n                                    Static\n                                info\n                            \n                            \n                                    Static\n                                log\n                            \n                            \n                                    Static\n                                setLogLevel\n                            \n                            \n                                    Static\n                                toLog\n                            \n                            \n                                    Static\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LOG_LEVELS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOG_LEVELS:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:11\n                            \n                        \n\n                \n                    \n                        all log levels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            logLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logLevel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'INFO'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:22\n                            \n                        \n\n                \n                    \n                        current log level set by setLogLevel, default 'INFO' \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:47\n                            \n                        \n\n\n                \n                    \n                            The same as console.debug() if the current log level is greater than debug \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:77\n                            \n                        \n\n\n                \n                    \n                            The same as console.error() if the current log level is greater than error \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        info(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:62\n                            \n                        \n\n\n                \n                    \n                            The same as console.info() if the current log level is greater than info \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:55\n                            \n                        \n\n\n                \n                    \n                            The same as console.log() if the current log level is greater than log \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            setLogLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLogLevel(logLevel: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:33\n                            \n                        \n\n\n                \n                    \n                            sets the current log level \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logLevel\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            toLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toLog(param)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:25\n                            \n                        \n\n\n                \n                    \n                            returns if it should call window.console or not \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        warn(...args: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:70\n                            \n                        \n\n\n                \n                    \n                            The same as console.warn() if the current log level is greater than warn \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class konsole { // tslint:disable-line\n  /** all log levels */\n  static LOG_LEVELS = {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  };\n\n  /** current log level set by setLogLevel, default 'INFO' */\n  static logLevel = 'INFO';\n\n  /** returns if it should call `window.console` or not */\n  static toLog(param): boolean { // returns to log or not\n    const restrictionNum = this.LOG_LEVELS[this.logLevel];\n    const requiredNum = this.LOG_LEVELS[param];\n\n    return requiredNum > restrictionNum;\n  }\n\n  /** sets the current log level */\n  static setLogLevel(logLevel: string): any {\n    logLevel = logLevel.toUpperCase();\n    const logLevels = Object.keys(this.LOG_LEVELS);\n    if (logLevels.indexOf(logLevel) > -1) {\n      if (window && window.sessionStorage) { // for browser env.\n        window.sessionStorage.setItem('konsole.LOG_LEVEL', logLevel);\n      }\n      this.logLevel = logLevel;\n    } else {\n      console.error(`Error, invalid logLevel, it must be one of ${logLevels}`);\n    }\n  }\n\n  /** The same as `console.debug()` if the current log level is greater than `debug` */\n  static debug(...args: Array): void {\n    if (this.toLog('DEBUG')) {\n        // noinspection TsLint\n        console.debug.apply(console, arguments); // tslint:disable-line\n    }\n  }\n\n  /** The same as `console.log()` if the current log level is greater than `log` */\n  static log(...args: Array): void {\n    if (this.toLog('LOG')) {\n      console.log.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.info()` if the current log level is greater than `info` */\n  static info(...args: Array): void {\n    if (this.toLog('INFO')) {\n        // noinspection TsLint\n        console.info.apply(console, arguments); // tslint:disable-line\n    }\n  }\n\n  /** The same as `console.warn()` if the current log level is greater than `warn` */\n  static warn(...args: Array): void {\n    if (this.toLog('WARN')) {\n      console.warn.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.error()` if the current log level is greater than `error` */\n  static error(...args: Array): void {\n    if (this.toLog('ERROR')) {\n      console.error.apply(console, arguments);\n    }\n  }\n}\n\n// konsole.setLogLevel('all');\n// konsole.debug('yes');\n// konsole.log('yes');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('none');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('no');\n\n// konsole.setLogLevel('info');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('WARN');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('ERROR');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('yes');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Allen Kim\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NguiCommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiInviewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiUtilsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiCommonModule\n\n\n\ncluster_NguiCommonModule_imports\n\n\n\ncluster_NguiCommonModule_exports\n\n\n\ncluster_NguiInviewModule\n\n\n\ncluster_NguiInviewModule_declarations\n\n\n\ncluster_NguiInviewModule_exports\n\n\n\ncluster_NguiListModule\n\n\n\ncluster_NguiListModule_declarations\n\n\n\ncluster_NguiListModule_exports\n\n\n\ncluster_NguiUtilsModule\n\n\n\ncluster_NguiUtilsModule_declarations\n\n\n\ncluster_NguiUtilsModule_exports\n\n\n\ncluster_NguiUtilsModule_providers\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiListModule -->\n\nNguiInviewModule->NguiListModule\n\n\n\n\n\nNguiCommonModule\n\nNguiCommonModule\n\nNguiCommonModule -->\n\nNguiInviewModule->NguiCommonModule\n\n\n\n\n\nNguiInviewComponent \n\nNguiInviewComponent \n\nNguiInviewComponent  -->\n\nNguiInviewModule->NguiInviewComponent \n\n\n\n\n\nNguiInviewDirective \n\nNguiInviewDirective \n\nNguiInviewDirective  -->\n\nNguiInviewModule->NguiInviewDirective \n\n\n\nNguiCommonModule -->\n\nNguiListModule->NguiCommonModule\n\n\n\n\n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent  -->\n\nNguiListModule->NguiAutocompleteComponent \n\n\n\n\n\nNguiInviewPageComponent \n\nNguiInviewPageComponent \n\nNguiInviewPageComponent  -->\n\nNguiListModule->NguiInviewPageComponent \n\n\n\n\n\nNguiListDirective \n\nNguiListDirective \n\nNguiListDirective  -->\n\nNguiListModule->NguiListDirective \n\n\n\n\n\nNguiListItemDirective \n\nNguiListItemDirective \n\nNguiListItemDirective  -->\n\nNguiListModule->NguiListItemDirective \n\n\n\n\n\nNguiVirtualListComponent \n\nNguiVirtualListComponent \n\nNguiVirtualListComponent  -->\n\nNguiListModule->NguiVirtualListComponent \n\n\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiCommonModule -->\n\nNguiUtilsModule->NguiCommonModule\n\n\n\n\n\nNguiHighlightPipe \n\nNguiHighlightPipe \n\nNguiHighlightPipe  -->\n\nNguiUtilsModule->NguiHighlightPipe \n\n\n\n\n\nNguiInviewModule \n\nNguiInviewModule \n\nNguiInviewModule  -->\n\nNguiCommonModule->NguiInviewModule \n\n\n\n\n\nNguiListModule \n\nNguiListModule \n\nNguiListModule  -->\n\nNguiCommonModule->NguiListModule \n\n\n\n\n\nNguiUtilsModule \n\nNguiUtilsModule \n\nNguiUtilsModule  -->\n\nNguiCommonModule->NguiUtilsModule \n\n\n\n\n\nNguiInviewComponent\n\nNguiInviewComponent\n\nNguiInviewModule -->\n\nNguiInviewComponent->NguiInviewModule\n\n\n\n\n\nNguiInviewDirective\n\nNguiInviewDirective\n\nNguiInviewModule -->\n\nNguiInviewDirective->NguiInviewModule\n\n\n\n\n\nNguiAutocompleteComponent\n\nNguiAutocompleteComponent\n\nNguiListModule -->\n\nNguiAutocompleteComponent->NguiListModule\n\n\n\n\n\nNguiInviewPageComponent\n\nNguiInviewPageComponent\n\nNguiListModule -->\n\nNguiInviewPageComponent->NguiListModule\n\n\n\n\n\nNguiListDirective\n\nNguiListDirective\n\nNguiListModule -->\n\nNguiListDirective->NguiListModule\n\n\n\n\n\nNguiListItemDirective\n\nNguiListItemDirective\n\nNguiListModule -->\n\nNguiListItemDirective->NguiListModule\n\n\n\n\n\nNguiVirtualListComponent\n\nNguiVirtualListComponent\n\nNguiListModule -->\n\nNguiVirtualListComponent->NguiListModule\n\n\n\n\n\nNguiHighlightPipe\n\nNguiHighlightPipe\n\nNguiUtilsModule -->\n\nNguiHighlightPipe->NguiUtilsModule\n\n\n\n\n\nDynamicComponentService\n\nDynamicComponentService\n\nNguiUtilsModule -->\n\nDynamicComponentService->NguiUtilsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
